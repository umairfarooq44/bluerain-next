@mixin list-group-item-variant2($state, $color) {
  .list-group-item-#{$state} {
    color: $color;
    background-color: #fff;
  }

  a.list-group-item-#{$state},
  button.list-group-item-#{$state} {
    color: $color;

    .list-group-item-heading {
      color: inherit;
    }

    @include hover-focus {
      color: #fff;
      background-color: $color;
    }

    &.active {
      @include plain-hover-focus {
        color: #fff;
        background-color: $color;
        border-color: $color;
      }
    }
  }
}


// // Base class
// //
// // Easily usable on <ul>, <ol>, or <div>.
//
// .list-group {
//   // No need to set list-style: none; since .list-group-item is block level
//   padding-left: 0; // reset padding because ul and ol
//   margin-bottom: 0;
// }
//
//
// // Individual list items
// //
// // Use on `li`s or `div`s within the `.list-group` parent.
//
// .list-group-item {
//   position: relative;
//   display: block;
//   padding: $list-group-item-padding-y $list-group-item-padding-x;
//   // Place the border on the list items and negative margin up for better styling
//   margin-bottom: -$list-group-border-width;
//   background-color: $list-group-bg;
//   border: $list-group-border-width solid $list-group-border-color;
//
//   &:first-child {
//     @include border-top-radius($list-group-border-radius);
//   }
//
//   &:last-child {
//     margin-bottom: 0;
//     @include border-bottom-radius($list-group-border-radius);
//   }
//
//   &.disabled {
//     @include plain-hover-focus {
//       color: $list-group-disabled-color;
//       cursor: $cursor-disabled;
//       background-color: $list-group-disabled-bg;
//
//       // Force color to inherit for custom content
//       .list-group-item-heading {
//         color: inherit;
//       }
//       .list-group-item-text {
//         color: $list-group-disabled-text-color;
//       }
//     }
//   }
//
//   &.active {
//     @include plain-hover-focus {
//       z-index: 2; // Place active items above their siblings for proper border styling
//       color: $list-group-active-color;
//       text-decoration: none; // Repeat here because it inherits global a:hover otherwise
//       background-color: $list-group-active-bg;
//       border-color: $list-group-active-border;
//
//       // Force color to inherit for custom content
//       .list-group-item-heading,
//       .list-group-item-heading > small,
//       .list-group-item-heading > .small {
//         color: inherit;
//       }
//       .list-group-item-text {
//         color: $list-group-active-text-color;
//       }
//     }
//   }
// }
//
// .list-group-flush {
//   .list-group-item {
//     border-radius: 0;
//   }
// }
//
//
// // Interactive list items
// //
// // Use anchor or button elements instead of `li`s or `div`s to create interactive
// // list items. Includes an extra `.active` modifier class for selected items.
//
// .list-group-item-action {
//   width: 100%; // For `<button>`s (anchors become 100% by default though)
//   color: $list-group-link-color;
//   text-align: inherit; // For `<button>`s (anchors inherit)
//
//   .list-group-item-heading {
//     color: $list-group-link-heading-color;
//   }
//
//   // Hover state
//   @include hover-focus {
//     color: $list-group-link-hover-color;
//     text-decoration: none;
//     background-color: $list-group-hover-bg;
//   }
// }
//
//
// // Contextual variants
// //
// // Add modifier classes to change text and background color on individual items.
// // Organizationally, this must come after the `:hover` states.
//
@include list-group-item-variant2(primary, $brand-primary);
@include list-group-item-variant2(success, $brand-success);
@include list-group-item-variant2(info, $brand-info);
@include list-group-item-variant2(warning, $brand-warning);
@include list-group-item-variant2(danger, $brand-danger);
//
//
// // Custom content options
// //
// // Extra classes for creating well-formatted content within `.list-group-item`s.
//
// .list-group-item-heading {
//   margin-top: 0;
//   margin-bottom: $list-group-item-heading-margin-bottom;
// }
// .list-group-item-text {
//   margin-bottom: 0;
//   line-height: 1.3;
// }

.list-group-plus {

    .list-group-item {
        display: flex;
        padding: .5rem;
        align-items: center;

        .list-group-item-img {
            // margin-right: 1rem;
            width: 40px;
            height: 40px;
        }

        .list-group-item-body {
            flex-grow: 1;
            padding: .5rem .5rem .5rem 1rem;

            .title {
                font-size: $font-size-lg;
            }
        }

        .list-group-item-icon {
            padding: .5rem .5rem .5rem 1rem;
            font-size: $font-size-lg;
            color: $text-muted;
        }
    }

    & + .list-group-plus {
        margin-top: 1rem;
    }
}
