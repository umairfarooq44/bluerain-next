// Compile Bootstrap with [libsass][1] using [grunt-sass][2]
// [1]: https://github.com/sass/libsass
// [2]: https://github.com/sindresorhus/grunt-sass
module.exports = function configureLibsass(grunt) {
  grunt.config.merge({
    sass: {
      options: {
        includePaths: ['scss'],
        precision: 6,
        sourceComments: false,
        sourceMap: true,
        outputStyle: 'expanded'
      },
      core: {
        files: [{
        expand: true,
        src: ['scss/**/*.scss', '!scss/**/_*.scss'],
        // dest: ['dist/css'],
        extDot: 'first',
        rename  : function (dest, src) {

          var _new_ext = 'css';

          //Get src filename
          src = src.split("/");
          var filename = src.pop();

          //Apply new extension to filename
          var arr  = filename.split(".");
          arr.pop();
          arr.push(_new_ext);
          filename = arr.join(".");

          var dist = ["dist", "css"]
          dist = dist.concat(src.splice(1))
          // src[0] = "css";
          dest = dest || dist.join("/");

          console.log(dest + '/' + filename)
          return dest + '/' + filename;
        }
      }]
      },
      extras: {
        files: {
          'dist/css/<%= pkg.name %>-flex.css': 'scss/<%= pkg.name %>-flex.scss',
          'dist/css/<%= pkg.name %>-grid.css': 'scss/<%= pkg.name %>-grid.scss',
          'dist/css/<%= pkg.name %>-reboot.css': 'scss/<%= pkg.name %>-reboot.scss'
        }
      },
      docs: {
        files: {
          'docs/assets/css/docs.min.css': 'docs/assets/scss/docs.scss',
          'docs/assets/css/docs-flexbox.min.css': 'docs/assets/scss/flex-grid.scss'
        }
      }
    }
  });
  grunt.loadNpmTasks('grunt-sass');

  grunt.registerTask('sassAll', function() {
      gruntUtils.sassTasks.forEach(function(param){
          grunt.task.run('sass:' + param);
      });
  });

  var gruntUtils = {
      sassTasks : [ 'components' ]
  };
};
