'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _CardBlock = require('reactstrap/lib/CardBlock');

var _CardBlock2 = _interopRequireDefault(_CardBlock);

var _CardText = require('reactstrap/lib/CardText');

var _CardText2 = _interopRequireDefault(_CardText);

var _reactFa = require('react-fa');

var _reactFa2 = _interopRequireDefault(_reactFa);

var _moment = require('moment');

var _moment2 = _interopRequireDefault(_moment);

require('bluerain-bootstrap-theme/dist/css/components/card-view.css');

var _CustomCardLink = require('./CustomCardLink');

var _CustomCardLink2 = _interopRequireDefault(_CustomCardLink);

var _CardViewImg = require('./CardViewImg');

var _CardViewImg2 = _interopRequireDefault(_CardViewImg);

var _CardView = require('./CardView');

var _CardView2 = _interopRequireDefault(_CardView);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by amna on 12/7/16.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var propTypes = {
  name: _react.PropTypes.string,
  time: _react.PropTypes.string,
  connected: _react.PropTypes.bool,
  importantState: _react.PropTypes.string,
  image: _react.PropTypes.string,
  linkTag: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.string]),
  to: _react.PropTypes.string,
  href: _react.PropTypes.string,
  onClick: _react.PropTypes.func
};
var defaultProps = {
  name: '',
  time: '',
  importantState: '',
  image: '',
  linkTag: 'a',
  to: '',
  href: '',
  onClick: function onClick() {},
  connected: undefined
};

var AssetCard = function (_React$Component) {
  _inherits(AssetCard, _React$Component);

  _createClass(AssetCard, null, [{
    key: 'renderName',
    value: function renderName(name) {
      if (name) {
        return _react2.default.createElement(
          _CardText2.default,
          { tag: 'span', className: 'text-truncate' },
          name
        );
      }
      return _react2.default.createElement(_CardText2.default, { tag: 'span' });
    }
  }, {
    key: 'getStatusIcon',
    value: function getStatusIcon(connected) {
      var onlineStatusCssClass = void 0;
      if (connected === true) {
        onlineStatusCssClass = 'circle text-success';
        return _react2.default.createElement(
          'span',
          { className: 'online-status' },
          _react2.default.createElement(_reactFa2.default, { name: onlineStatusCssClass })
        );
      } else if (connected !== undefined && !connected) {
        onlineStatusCssClass = 'circle text-danger';
        return _react2.default.createElement(
          'span',
          { className: 'online-status' },
          _react2.default.createElement(_reactFa2.default, { name: onlineStatusCssClass })
        );
      }
    }
  }, {
    key: 'getSubtitle',
    value: function getSubtitle(time) {
      if (time) {
        return _react2.default.createElement(
          'span',
          null,
          _react2.default.createElement(_reactFa2.default, { name: 'clock-o' }),
          ' ',
          (0, _moment2.default)(time).fromNow(true)
        ); // time format should be converted
      }
    }
  }, {
    key: 'getimportantState',
    value: function getimportantState(importantState) {
      if (!importantState) {
        return _react2.default.createElement('div', null);
      }
      if (importantState === 'true') {
        return _react2.default.createElement(
          'span',
          null,
          'Off'
        );
      } else if (importantState === 'false') {
        return _react2.default.createElement(
          'span',
          null,
          'On'
        );
      }
      return _react2.default.createElement(
        'span',
        null,
        importantState.substring(0, 2),
        ' \u2103'
      );
    }
  }]);

  function AssetCard(props) {
    _classCallCheck(this, AssetCard);

    var _this = _possibleConstructorReturn(this, (AssetCard.__proto__ || Object.getPrototypeOf(AssetCard)).call(this, props));

    _this.handleClickAction = _this.handleClickAction.bind(_this);
    return _this;
  }

  _createClass(AssetCard, [{
    key: 'handleClickAction',
    value: function handleClickAction() {
      this.props.onClick();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          name = _props.name,
          time = _props.time,
          connected = _props.connected,
          importantState = _props.importantState,
          image = _props.image,
          linkTag = _props.linkTag,
          to = _props.to,
          href = _props.href,
          props = _objectWithoutProperties(_props, ['name', 'time', 'connected', 'importantState', 'image', 'linkTag', 'to', 'href']);

      return _react2.default.createElement(
        _CardView2.default,
        _extends({ onClick: this.handleClickAction }, props),
        _react2.default.createElement(
          _CustomCardLink2.default,
          {
            tag: linkTag,
            to: to,
            href: href
          },
          _react2.default.createElement(_CardViewImg2.default, { image: image }),
          _react2.default.createElement(
            _CardBlock2.default,
            null,
            _react2.default.createElement(
              'div',
              { className: 'primary-text' },
              AssetCard.renderName(name),
              AssetCard.getStatusIcon(connected)
            ),
            _react2.default.createElement(
              'div',
              { className: 'text-muted secondary-text' },
              _react2.default.createElement(
                _CardText2.default,
                { tag: 'span' },
                AssetCard.getSubtitle(time)
              ),
              AssetCard.getimportantState(importantState)
            )
          )
        )
      );
    }
  }]);

  return AssetCard;
}(_react2.default.Component);

exports.default = AssetCard;


AssetCard.propTypes = propTypes;
AssetCard.defaultProps = defaultProps;