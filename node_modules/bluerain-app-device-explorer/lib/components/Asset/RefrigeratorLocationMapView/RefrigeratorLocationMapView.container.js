'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('bluerain-bootstrap-theme/dist/css/components/data-list.css');

var _reactGmaps = require('react-gmaps');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  data: _react.PropTypes.object
};

var defaultProps = {};

var RefrigeratorLocationMapView = function (_React$Component) {
  _inherits(RefrigeratorLocationMapView, _React$Component);

  function RefrigeratorLocationMapView() {
    _classCallCheck(this, RefrigeratorLocationMapView);

    return _possibleConstructorReturn(this, (RefrigeratorLocationMapView.__proto__ || Object.getPrototypeOf(RefrigeratorLocationMapView)).apply(this, arguments));
  }

  _createClass(RefrigeratorLocationMapView, [{
    key: 'render',
    value: function render() {
      if (!this.props.data.node || !this.props.data.node.state) {
        return _react2.default.createElement('div', null);
      }

      var _props$data$node$stat = this.props.data.node.state.location,
          latitude = _props$data$node$stat.latitude,
          longitude = _props$data$node$stat.longitude;

      if (!latitude || !longitude) {
        latitude = 31387640;
        longitude = 74148855;
      }
      var lat = latitude / 1000000;
      var lng = longitude / 1000000;
      return _react2.default.createElement(
        _reactGmaps.Gmaps,
        {
          width: '100%',
          height: '30vh',
          lat: lat,
          lng: lng,
          zoom: 15,
          streetViewControl: false,
          params: { v: '3.exp', key: 'AIzaSyCgVYH02v3XYmCSIokoLOZzvUqJG6ZamMY' }
        },
        _react2.default.createElement(_reactGmaps.Marker, {
          lat: lat,
          lng: lng
        })
      );
    }
  }]);

  return RefrigeratorLocationMapView;
}(_react2.default.Component);

exports.default = RefrigeratorLocationMapView;


RefrigeratorLocationMapView.propTypes = propTypes;
RefrigeratorLocationMapView.defaultProps = defaultProps;