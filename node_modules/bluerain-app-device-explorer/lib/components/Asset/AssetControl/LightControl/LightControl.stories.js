'use strict';

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _graphqlRelay = require('graphql-relay');

var _storybook = require('@kadira/storybook');

var _storybookAddonKnobs = require('@kadira/storybook-addon-knobs');

var _index = require('./index');

var _index2 = _interopRequireDefault(_index);

var _LightControl = require('./LightControl.component');

var _LightControl2 = _interopRequireDefault(_LightControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Created by amna on 02/02/17.
 */
var stories = (0, _storybook.storiesOf)('Light Control', module);
stories.addDecorator(_storybookAddonKnobs.withKnobs);

stories.addWithInfo('Full Control with live data', function () {

  var globalId = (0, _storybookAddonKnobs.text)('Parent Global ID', 'QXNzZXQ6NVBlZ3RMZHZBQQ==');
  var parseId = (0, _storybookAddonKnobs.text)('Parent Parse ID', '');

  if (!globalId && parseId) {
    globalId = (0, _graphqlRelay.toGlobalId)('Asset', parseId);
  }

  return _react2.default.createElement(_index2.default, { assetId: globalId });
});

stories.addWithInfo('Light Control in Standby Mode', function () {
  return _react2.default.createElement(_LightControl2.default, {
    standby: (0, _storybookAddonKnobs.boolean)('Standby', true),
    disableStandby: (0, _storybookAddonKnobs.boolean)('Disable Standby', false),
    onStandbyToggle: (0, _storybook.action)('Standby Toggle'),

    color: (0, _storybookAddonKnobs.color)('Color'),
    disableColor: (0, _storybookAddonKnobs.boolean)('Disable Color', false),
    onColorChangeComplete: (0, _storybook.action)('Color Changed'),

    brightness: (0, _storybookAddonKnobs.number)('Brightness', 26),
    disableBrightness: (0, _storybookAddonKnobs.boolean)('Disable Brightness', false),
    minBrightness: (0, _storybookAddonKnobs.number)('Min Brightness', 0),
    maxBrightness: (0, _storybookAddonKnobs.number)('Max Brightness', 100),
    brightnessStep: (0, _storybookAddonKnobs.number)('Brightness Set', 1),
    onBrightnessChange: (0, _storybook.action)('Brightness Change'),

    colorTemperature: (0, _storybookAddonKnobs.number)('Color Temperature', 5000),
    disableColorTemperature: (0, _storybookAddonKnobs.boolean)('Disable Color Temperature', false),
    minColorTemperature: (0, _storybookAddonKnobs.number)('Min Color Temperature', 3500),
    maxColorTemperature: (0, _storybookAddonKnobs.number)('Max Color Temperature', 9000),
    colorTemperatureStep: (0, _storybookAddonKnobs.number)('Color Temperature Set', 100),
    onColorTemperatureChange: (0, _storybook.action)('Color Temperature Change')
  });
});

stories.addWithInfo('Light Control in connected mode', function () {
  return _react2.default.createElement(_LightControl2.default, {
    standby: (0, _storybookAddonKnobs.boolean)('Standby', false),
    disableStandby: (0, _storybookAddonKnobs.boolean)('Disable Standby', false),
    onStandbyToggle: (0, _storybook.action)('Standby Toggle'),

    color: (0, _storybookAddonKnobs.color)('Color'),
    disableColor: (0, _storybookAddonKnobs.boolean)('Disable Color', false),
    onColorChangeComplete: (0, _storybook.action)('Color Changed'),

    brightness: (0, _storybookAddonKnobs.number)('Brightness', 26),
    disableBrightness: (0, _storybookAddonKnobs.boolean)('Disable Brightness', false),
    minBrightness: (0, _storybookAddonKnobs.number)('Min Brightness', 0),
    maxBrightness: (0, _storybookAddonKnobs.number)('Max Brightness', 100),
    brightnessStep: (0, _storybookAddonKnobs.number)('Brightness Set', 1),
    onBrightnessChange: (0, _storybook.action)('Brightness Change'),

    colorTemperature: (0, _storybookAddonKnobs.number)('Color Temperature', 5000),
    disableColorTemperature: (0, _storybookAddonKnobs.boolean)('Disable Color Temperature', false),
    minColorTemperature: (0, _storybookAddonKnobs.number)('Min Color Temperature', 3500),
    maxColorTemperature: (0, _storybookAddonKnobs.number)('Max Color Temperature', 9000),
    colorTemperatureStep: (0, _storybookAddonKnobs.number)('Color Temperature Set', 100),
    onColorTemperatureChange: (0, _storybook.action)('Color Temperature Change')
  });
});