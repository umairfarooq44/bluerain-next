'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _graphqlRelay = require('graphql-relay');

var _SonosControl = require('./SonosControl.component');

var _SonosControl2 = _interopRequireDefault(_SonosControl);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  assetId: _react.PropTypes.string,
  assetState: _react.PropTypes.object,
  onError: _react.PropTypes.func,
  mutate: _react.PropTypes.func,
  data: _react.PropTypes.object
};

var defaultProps = {
  assetId: null,
  asset: null,
  viewerQuery: null,
  assetState: {
    volume: 66,
    currentTrackObject: {},
    standby: true
  },

  mutate: function mutate() {},
  onError: function onError() {}
};

var SonosControlContainer = function (_React$Component) {
  _inherits(SonosControlContainer, _React$Component);

  _createClass(SonosControlContainer, null, [{
    key: 'getVolumeObject',
    value: function getVolumeObject(volume) {
      return { level: volume };
    }
  }]);

  function SonosControlContainer(props) {
    _classCallCheck(this, SonosControlContainer);

    var _this = _possibleConstructorReturn(this, (SonosControlContainer.__proto__ || Object.getPrototypeOf(SonosControlContainer)).call(this, props));

    _this.persistState = _this.persistState.bind(_this);
    _this.state = props.assetState;
    return _this;
  }

  _createClass(SonosControlContainer, [{
    key: 'componentWillReceiveProps',
    value: function componentWillReceiveProps(nextProps) {
      try {
        var state = nextProps.data.node.state;

        if (!state) {
          return;
        }
        var newState = Object.assign({}, this.state, state);
        newState.volume = state.level;
        this.setState(newState);
      } catch (e) {
        this.props.onError(e);
      }
    }
  }, {
    key: 'persistState',
    value: function persistState(data) {
      var _this2 = this;

      // Set local state
      if (!data.params.level) {
        this.setState(data.params);
        data.params = {};
      } else {
        this.setState({ volume: data.params.level });
      }

      // Setup data
      var assetId = this.props.assetId;
      var deviceID = null;

      try {
        deviceID = this.props.data.node.devices.edges[0].node.id;
      } catch (e) {
        return this.props.onError(e);
      }
      // Create Object
      var eventObj = {
        type: 'command',
        data: data,
        assetId: (0, _graphqlRelay.fromGlobalId)(assetId).id,
        deviceId: (0, _graphqlRelay.fromGlobalId)(deviceID).id
      };

      // Find Viewer
      try {
        var viewerId = this.props.data.viewer.me.id;
        eventObj.sourceAccountId = (0, _graphqlRelay.fromGlobalId)(viewerId).id;
      } catch (e) {
        return this.props.onError(e);
      }
      // // Mutate
      this.props.mutate({
        variables: { data: eventObj }
      }).catch(function (error) {
        _this2.props.onError(error);
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this3 = this;

      var volume = this.state.volume;

      return _react2.default.createElement(_SonosControl2.default

      // on play
      , { play: function play(track) {
          return _this3.persistState({
            name: 'play',
            params: { track: track }
          });
        }

        // on pause
        , pause: function pause(track) {
          return _this3.persistState({
            name: 'pause',
            params: { track: track }
          });
        }

        // on next track
        , forward: function forward(track) {
          return _this3.persistState({
            name: 'nextTrack',
            params: { track: track }
          });
        }

        // on previous track
        , backward: function backward(track) {
          return _this3.persistState({
            name: 'previousTrack',
            params: { track: track }
          });
        }

        // Volume
        , volume: volume,
        onVolumeChange: function onVolumeChange(volume) {
          return _this3.persistState({
            name: 'setVolume',
            params: SonosControlContainer.getVolumeObject(volume)
          });
        }
      });
    }
  }]);

  return SonosControlContainer;
}(_react2.default.Component);

SonosControlContainer.propTypes = propTypes;
SonosControlContainer.defaultProps = defaultProps;

exports.default = SonosControlContainer;