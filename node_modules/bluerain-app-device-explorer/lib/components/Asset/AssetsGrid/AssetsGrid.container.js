'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.AssetsGrid = undefined;

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _GridView = require('bluerain-ui/lib/GridView/GridView.component');

var _GridView2 = _interopRequireDefault(_GridView);

var _GridViewItem = require('bluerain-ui/lib/GridView/GridViewItem.component');

var _GridViewItem2 = _interopRequireDefault(_GridViewItem);

var _bluerainClientServices = require('bluerain-client-services');

var _AssetCard = require('../AssetCard/AssetCard.component');

var _AssetCard2 = _interopRequireDefault(_AssetCard);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  assets: _react.PropTypes.array,
  hideLoading: _react.PropTypes.func
};

var defaultProps = {
  hideLoading: function hideLoading() {}
};

var AssetsGrid = exports.AssetsGrid = function (_React$Component) {
  _inherits(AssetsGrid, _React$Component);

  _createClass(AssetsGrid, null, [{
    key: 'getImageUrl',
    value: function getImageUrl(site) {
      if (site.image) {
        return site.image;
      }

      if (site.type && site.type.icon) {
        return site.type.icon;
      }

      return null;
    }
  }, {
    key: 'renderAssetCard',
    value: function renderAssetCard(asset) {
      var props = {
        name: asset.name,
        to: '/app/device-explorer/assets/' + asset.id,
        linkTag: _reactRouter.Link
      };

      // Time
      try {
        props.time = asset.events.edges[0].node.time;
      } catch (e) {
        console.log('ERROR =>', e);
      }

      // importantState
      try {
        props.importantState = asset.importantState.value.toString();
      } catch (e) {
        console.log('ERROR =>', e);
      }

      // connected
      try {
        props.connected = asset.state.connected;
      } catch (e) {
        console.log('ERROR =>', e);
      }

      // image
      try {
        props.image = asset.assetType.icon;
      } catch (e) {
        console.log('ERROR =>', e);
      }

      return _react2.default.createElement(
        _GridViewItem2.default,
        { key: asset.id },
        _react2.default.createElement(_AssetCard2.default, props)
      );
    }
  }]);

  function AssetsGrid(props) {
    _classCallCheck(this, AssetsGrid);

    var _this = _possibleConstructorReturn(this, (AssetsGrid.__proto__ || Object.getPrototypeOf(AssetsGrid)).call(this, props));

    AssetsGrid.renderAssetCard = AssetsGrid.renderAssetCard.bind(_this);
    return _this;
  }

  _createClass(AssetsGrid, [{
    key: 'componentDidMount',
    value: function componentDidMount() {
      if (this.props.hideLoading) {
        this.props.hideLoading();
      }

      if (this.props.assets && this.props.assets.length === 0) {
        this.props.hideLoading();
      }

      return null;
    }
  }, {
    key: 'render',
    value: function render() {
      var assets = this.props.assets || [];
      return _react2.default.createElement(
        _GridView2.default,
        null,
        assets.map(AssetsGrid.renderAssetCard)
      );
    }
  }]);

  return AssetsGrid;
}(_react2.default.Component);

AssetsGrid.propTypes = propTypes;
AssetsGrid.defaultProps = defaultProps;

exports.default = (0, _bluerainClientServices.withLoadingBar)(AssetsGrid);