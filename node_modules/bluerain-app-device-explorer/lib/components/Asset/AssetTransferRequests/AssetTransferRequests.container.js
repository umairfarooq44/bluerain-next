'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactApollo = require('react-apollo');

var _reactRouter = require('react-router');

var _bluerainClientServices = require('bluerain-client-services');

var _query = require('./query.graphql');

var _query2 = _interopRequireDefault(_query);

var _AssetTransferRequests = require('./AssetTransferRequests.component');

var _AssetTransferRequests2 = _interopRequireDefault(_AssetTransferRequests);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 2/24/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

// import { withNotifications } from 'bluerain-client-services';


var propTypes = {
  data: _react.PropTypes.object
};

var defaultProps = {};

var AssetTransferRequests = function (_React$Component) {
  _inherits(AssetTransferRequests, _React$Component);

  function AssetTransferRequests() {
    _classCallCheck(this, AssetTransferRequests);

    return _possibleConstructorReturn(this, (AssetTransferRequests.__proto__ || Object.getPrototypeOf(AssetTransferRequests)).apply(this, arguments));
  }

  _createClass(AssetTransferRequests, [{
    key: 'render',
    value: function render() {
      try {
        if (!this.props.data || !this.props.data.viewer) {
          return _react2.default.createElement('div', null);
        }
        var requests = this.props.data.viewer.transferRequests.edges;
        if (requests.length > 0) {
          return _react2.default.createElement(
            'div',
            null,
            _react2.default.createElement(_AssetTransferRequests2.default, {
              currentUserId: this.props.data.viewer.id, requests: requests,
              ownerId: requests[0].node.currentOwnerUserId
            })
          );
        }
        return _react2.default.createElement(
          'div',
          { style: { paddingTop: '20px' } },
          _react2.default.createElement(
            'div',
            { className: 'alert alert-info', role: 'alert' },
            _react2.default.createElement(
              'strong',
              null,
              'Info!'
            ),
            ' There are currently no transfer ownership requests.'
          )
        );
      } catch (e) {
        console.log('ERROR =>', e);
      }
    }
  }]);

  return AssetTransferRequests;
}(_react2.default.Component);

// export default UserInfoTransfer;

// const componentWithQuery = graphql(TransferRequestsQuery, {
// })(AssetTransferRequests);

exports.default = (0, _reactApollo.graphql)(_query2.default)((0, _bluerainClientServices.withNotifications)((0, _reactRouter.withRouter)(AssetTransferRequests)));


AssetTransferRequests.propTypes = propTypes;
AssetTransferRequests.defaultProps = defaultProps;