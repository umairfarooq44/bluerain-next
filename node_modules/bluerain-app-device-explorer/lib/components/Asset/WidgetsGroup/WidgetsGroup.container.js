'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _reactFa = require('react-fa');

var _AssetsGrid = require('../AssetsGrid');

var _AssetsGrid2 = _interopRequireDefault(_AssetsGrid);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  data: _react.PropTypes.object,
  siteId: _react.PropTypes.string
};

var defaultProps = {};

var WidgetsGroup = function (_React$Component) {
  _inherits(WidgetsGroup, _React$Component);

  function WidgetsGroup() {
    _classCallCheck(this, WidgetsGroup);

    return _possibleConstructorReturn(this, (WidgetsGroup.__proto__ || Object.getPrototypeOf(WidgetsGroup)).apply(this, arguments));
  }

  _createClass(WidgetsGroup, [{
    key: 'render',
    value: function render() {
      var assets = void 0;
      var assetGroups = void 0;
      var addDeviceUrl = void 0;
      try {
        assets = this.props.data.node.assets.edges;
        if (assets.length > 0) {
          assets = assets.map(function (item) {
            return item.node;
          });
          assetGroups = WidgetsGroup.distributeAssetsByTypes(assets);
        } else {
          addDeviceUrl = '/app/device-explorer/sites/' + this.props.siteId + '/add-device?siteName=' + this.props.data.node.name;
          return _react2.default.createElement(
            'div',
            { className: 'app-content' },
            _react2.default.createElement(
              'div',
              { className: 'container' },
              _react2.default.createElement(
                'div',
                { className: 'v-align' },
                _react2.default.createElement(
                  'div',
                  { className: 'v-align-middle empty-block' },
                  _react2.default.createElement(_reactFa.Icon, { name: 'lightbulb-o fa-5x' }),
                  _react2.default.createElement(
                    'h4',
                    null,
                    'No devices added'
                  ),
                  _react2.default.createElement(
                    'p',
                    null,
                    'To monitor your site you will need to add your devices.'
                  ),
                  _react2.default.createElement(
                    _reactRouter.Link,
                    { className: 'btn btn-outline-primary btn-lg', to: addDeviceUrl },
                    'Add Device'
                  )
                )
              )
            )
          );
        }
      } catch (e) {
        console.info('There was an error fetching sites.');
        return _react2.default.createElement('div', null);
      }

      var groups = Object.keys(assetGroups.groups);

      return _react2.default.createElement(
        'div',
        null,
        groups.map(function (title) {
          return WidgetsGroup.renderAssetGroupWidget(title, assetGroups.groups[title]);
        }),
        WidgetsGroup.renderOrphanAssetGroupWidget(assetGroups.orphans)
      );
    }
  }], [{
    key: 'distributeAssetsByTypes',
    value: function distributeAssetsByTypes(assets) {
      var groups = {};
      var orphans = [];

      assets.forEach(function (asset) {
        var type = asset.assetType;

        if (!type || !type.category) {
          orphans.push(asset);
          return;
        }

        var typeCategory = type.category;

        if (!groups[typeCategory]) {
          groups[typeCategory] = [];
        }

        groups[typeCategory].push(asset);
      });

      return {
        groups: groups,
        orphans: orphans
      };
    }
  }, {
    key: 'renderAssetGroupWidget',
    value: function renderAssetGroupWidget(title, assets) {
      return _react2.default.createElement(_AssetsGrid2.default, { key: title, title: title, assets: assets });
    }
  }, {
    key: 'renderOrphanAssetGroupWidget',
    value: function renderOrphanAssetGroupWidget(assets) {

      if (assets && assets.length > 0) {
        return _react2.default.createElement(_AssetsGrid2.default, { title: 'Other', assets: assets });
      }
    }
  }]);

  return WidgetsGroup;
}(_react2.default.Component);

exports.default = WidgetsGroup;


WidgetsGroup.propTypes = propTypes;
WidgetsGroup.defaultProps = defaultProps;