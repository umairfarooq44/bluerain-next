'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactFa = require('react-fa');

var _reactRouter = require('react-router');

var _reactApollo = require('react-apollo');

var _graphqlRelay = require('graphql-relay');

require('bluerain-bootstrap-theme/dist/css/components/data-list.css');

var _ListViewItem = require('bluerain-ui/lib/ListView/ListViewItem');

var _ListViewItem2 = _interopRequireDefault(_ListViewItem);

var _query = require('./query.graphql');

var _query2 = _interopRequireDefault(_query);

var _siteNameQuery = require('./siteNameQuery.graphql');

var _siteNameQuery2 = _interopRequireDefault(_siteNameQuery);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 1/16/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var propTypes = {
  assetId: _react.PropTypes.string,
  routes: _react.PropTypes.array,
  siteFind: _react.PropTypes.object,
  siteName: _react.PropTypes.object
};

var defaultProps = {};
var addDeviceUrl = void 0;
var params = void 0;
var siteName = void 0;

var SideBar = function (_React$Component) {
  _inherits(SideBar, _React$Component);

  function SideBar() {
    _classCallCheck(this, SideBar);

    return _possibleConstructorReturn(this, (SideBar.__proto__ || Object.getPrototypeOf(SideBar)).apply(this, arguments));
  }

  _createClass(SideBar, [{
    key: 'render',
    value: function render() {
      if (this.props.siteName && this.props.siteName.Site) {
        siteName = this.props.siteName.Site.SiteFind.edges[0].node.name;
      }
      if (this.props.siteFind && this.props.siteFind.Asset) {
        addDeviceUrl = '/app/device-explorer/sites/' + this.props.siteFind.Asset.AssetFind.edges[0].node.siteId + '/add-device?siteName=' + siteName + '&state="update"';
      }
      var deviceInfoRoute = '/app/device-explorer/assets/' + this.props.assetId + '/device-info';
      var networkSettingsRoute = '/app/device-explorer/assets/' + this.props.assetId + '/device-network-settings';
      var generalSettingsRoute = '/app/device-explorer/assets/' + this.props.assetId + '/device-general-settings';

      var settingsPath = '';
      if (this.props.routes[4] && this.props.routes[4].path) {
        settingsPath = this.props.routes[4].path;
      }

      return _react2.default.createElement(
        'ul',
        { className: 'list-group' },
        _react2.default.createElement(
          _ListViewItem2.default,
          {
            className: settingsPath === 'device-general-settings' ? 'active' : '', tag: _reactRouter.Link,
            to: generalSettingsRoute, action: true, chevronRight: false
          },
          _react2.default.createElement(_reactFa.Icon, { name: 'gear', className: 'fa-fw' }),
          '\xA0 General'
        ),
        _react2.default.createElement(
          _ListViewItem2.default,
          {
            className: settingsPath === 'device-network-settings' ? 'active' : '', tag: _reactRouter.Link,
            to: networkSettingsRoute, action: true, chevronRight: false
          },
          _react2.default.createElement(_reactFa.Icon, { name: 'wifi', className: 'fa-fw' }),
          '\xA0 Network'
        ),
        _react2.default.createElement(
          _ListViewItem2.default,
          {
            className: settingsPath === 'device-info' ? 'active' : '', tag: _reactRouter.Link,
            to: deviceInfoRoute, action: true, chevronRight: false
          },
          _react2.default.createElement(_reactFa.Icon, { name: 'info-circle', className: 'fa-fw' }),
          '\xA0 About'
        ),
        _react2.default.createElement(
          _ListViewItem2.default,
          {
            tag: _reactRouter.Link,
            to: addDeviceUrl, action: true, chevronRight: false
          },
          _react2.default.createElement(_reactFa.Icon, { name: 'signal', className: 'fa-fw' }),
          '\xA0 Wi-Fi Configuration'
        )
      );
    }
  }]);

  return SideBar;
}(_react2.default.Component);

SideBar.propTypes = propTypes;
SideBar.defaultProps = defaultProps;

exports.default = (0, _reactApollo.graphql)(_query2.default, {
  name: 'siteFind',
  options: function options(args) {
    var queryString = {
      where: {
        id: (0, _graphqlRelay.fromGlobalId)(args.assetId).id
      }
    };
    return { variables: { queryString: queryString } };
  }
})((0, _reactApollo.graphql)(_siteNameQuery2.default, { name: 'siteName', options: function options(args) {
    if (args.siteFind.Asset) {
      params = args.siteFind.Asset.AssetFind.edges[0].node.siteId;
    }
    var queryString = {
      where: {
        id: params
      }
    };
    return { variables: { queryString: queryString } };
  } })(SideBar));