'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Media = require('reactstrap/lib/Media');

var _Media2 = _interopRequireDefault(_Media);

var _ListViewItem = require('bluerain-ui/lib/ListView/ListViewItem');

var _ListViewItem2 = _interopRequireDefault(_ListViewItem);

var _reactApollo = require('react-apollo');

var _reactRouter = require('react-router');

var _reactFa = require('react-fa');

var _withNotifications = require('../../../../Notifications/withNotifications');

var _UserQuery = require('./UserQuery.graphql');

var _UserQuery2 = _interopRequireDefault(_UserQuery);

var _OwnershipTransferMutation = require('./OwnershipTransferMutation.graphql');

var _OwnershipTransferMutation2 = _interopRequireDefault(_OwnershipTransferMutation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 2/23/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

// import { withNotifications } from 'bluerain-client-services';


var propTypes = {
  onSubmit: _react.PropTypes.func,
  data: _react.PropTypes.object,
  assetId: _react.PropTypes.string,
  ownerId: _react.PropTypes.string,
  userId: _react.PropTypes.string,
  mutate: _react.PropTypes.func,
  addNotification: _react.PropTypes.func,
  notification: _react.PropTypes.func
};

var defaultProps = {};

var UserInfoTransfer = function (_React$Component) {
  _inherits(UserInfoTransfer, _React$Component);

  function UserInfoTransfer(props) {
    _classCallCheck(this, UserInfoTransfer);

    var _this = _possibleConstructorReturn(this, (UserInfoTransfer.__proto__ || Object.getPrototypeOf(UserInfoTransfer)).call(this, props));

    _this.state = {
      value: '',
      onSubmitCallback: props.onSubmit
    };
    _this.onSubmit = _this.onSubmit.bind(_this);
    return _this;
  }

  // Form on submit


  _createClass(UserInfoTransfer, [{
    key: 'onSubmit',
    value: function onSubmit(event) {
      event.preventDefault();
      var addNotification = this.props.notification.addNotification;

      var assetId = this.props.assetId;
      var variables = {
        asset: { globalId: assetId },
        currentOwnerUserId: this.props.ownerId,
        newOwnerUserId: this.props.userId,
        status: 'Pending',
        transferType: 'Asset'
      };

      // mutation to update asset
      this.props.mutate({
        variables: variables
      });
      addNotification({
        title: 'Success',
        message: 'Ownership transferred',
        status: 'success',
        dismissible: true,
        dismissAfter: 3000,
        position: 'br',
        level: 'error'
      });
    }
  }, {
    key: 'renderForm',
    value: function renderForm() {
      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          _react2.default.createElement(
            'form',
            { onSubmit: this.onSubmit, noValidate: true },
            _react2.default.createElement(
              'button',
              { type: 'submit', className: 'btn btn-primary' },
              'Continue'
            )
          )
        )
      );
    }
  }, {
    key: 'render',
    value: function render() {
      if (!this.props.data || !this.props.data.node) {
        return _react2.default.createElement('div', null);
      }

      var _props$data$node = this.props.data.node,
          email = _props$data$node.email,
          firstName = _props$data$node.firstName,
          lastName = _props$data$node.lastName,
          profilePicture = _props$data$node.profilePicture;

      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'ul',
          { className: 'list-group data-list' },
          UserInfoTransfer.renderProfilePic(profilePicture),
          UserInfoTransfer.renderFirstName(firstName),
          UserInfoTransfer.renderLastName(lastName),
          UserInfoTransfer.renderEmail(email),
          this.renderForm()
        ),
        _react2.default.createElement(
          'div',
          { style: { paddingTop: '20px' } },
          _react2.default.createElement(
            'div',
            { className: 'alert alert-warning', role: 'alert' },
            _react2.default.createElement(_reactFa.Icon, { name: 'map-marker' }),
            ' ',
            _react2.default.createElement(
              'strong',
              null,
              'Warning!'
            ),
            ' After pressing "Continue", you will no longer be able to control this asset.'
          )
        )
      );
    }
  }], [{
    key: 'renderFirstName',
    value: function renderFirstName(firstName) {
      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'First Name'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          firstName
        )
      );
    }
  }, {
    key: 'renderLastName',
    value: function renderLastName(lastName) {
      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'Last Name'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          lastName
        )
      );
    }
  }, {
    key: 'renderEmail',
    value: function renderEmail(email) {
      if (email === undefined || email === null) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'Email'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          email
        )
      );
    }
  }, {
    key: 'renderProfilePic',
    value: function renderProfilePic(profilePicture) {
      if (profilePicture === undefined || profilePicture === null) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        _ListViewItem2.default,
        null,
        _react2.default.createElement(
          _Media2.default,
          { left: true },
          _react2.default.createElement('img', {
            id: 'site_logo', role: 'presentation', style: { height: '100px', width: '100px', borderRadius: '5px' },
            src: profilePicture.url
          })
        )
      );
    }
  }]);

  return UserInfoTransfer;
}(_react2.default.Component);

var componentWithQuery = (0, _reactApollo.graphql)(_UserQuery2.default, {
  options: function options(_ref) {
    var userId = _ref.userId;
    return { variables: { userId: userId } };
  }
})(UserInfoTransfer);
exports.default = (0, _reactApollo.graphql)(_OwnershipTransferMutation2.default)((0, _withNotifications.withNotifications)((0, _reactRouter.withRouter)(componentWithQuery)));


UserInfoTransfer.propTypes = propTypes;
UserInfoTransfer.defaultProps = defaultProps;