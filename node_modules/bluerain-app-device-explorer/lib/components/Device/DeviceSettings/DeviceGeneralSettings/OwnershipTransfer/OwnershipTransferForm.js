'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ListViewItem = require('bluerain-ui/lib/ListView/ListViewItem');

var _ListViewItem2 = _interopRequireDefault(_ListViewItem);

var _OwnershipTransferForm = require('./OwnershipTransferForm2');

var _OwnershipTransferForm2 = _interopRequireDefault(_OwnershipTransferForm);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 2/21/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var propTypes = {
  onSubmit: _react.PropTypes.func,
  assetId: _react.PropTypes.string
};

var defaultProps = {};
// let emailId;

var OwnershipTransferForm = function (_React$Component) {
  _inherits(OwnershipTransferForm, _React$Component);

  function OwnershipTransferForm(props) {
    _classCallCheck(this, OwnershipTransferForm);

    var _this = _possibleConstructorReturn(this, (OwnershipTransferForm.__proto__ || Object.getPrototypeOf(OwnershipTransferForm)).call(this, props));

    _this.state = {
      value: '',
      onSubmitCallback: props.onSubmit
    };

    _this.handleChange = _this.handleChange.bind(_this);
    _this.onSubmit = _this.onSubmit.bind(_this);
    return _this;
  }

  // Form on submit


  _createClass(OwnershipTransferForm, [{
    key: 'onSubmit',
    value: function onSubmit(event) {
      // emailId = this.state.value;
      event.preventDefault();
    }

    // Get value of asset name

  }, {
    key: 'handleChange',
    value: function handleChange(event) {
      // emailId = event.target.value;
      this.setState({
        value: event.target.value
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        _react2.default.createElement(
          'form',
          null,
          _react2.default.createElement(
            _ListViewItem2.default,
            null,
            _react2.default.createElement('input', {
              type: 'email', value: this.state.value, onChange: this.handleChange, className: 'form-control',
              'aria-describedby': 'email', placeholder: 'Email Address'
            }),
            _react2.default.createElement(
              'small',
              { className: 'form-text text-muted' },
              'Enter email address of the user you want to transfer ownership.'
            )
          ),
          _react2.default.createElement(
            _ListViewItem2.default,
            { style: { display: 'none' } },
            _react2.default.createElement(
              'button',
              { type: 'submit', className: 'btn btn-primary' },
              'Transfer'
            )
          )
        ),
        _react2.default.createElement(_OwnershipTransferForm2.default, { emailId: this.state.value, assetId: this.props.assetId })
      );
    }
  }]);

  return OwnershipTransferForm;
}(_react2.default.Component);

exports.default = OwnershipTransferForm;


OwnershipTransferForm.propTypes = propTypes;
OwnershipTransferForm.defaultProps = defaultProps;