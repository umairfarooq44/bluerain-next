"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 1/16/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var propTypes = {
  data: _react.PropTypes.object
};

var defaultProps = {};

var createdDate = void 0;
var todayDate = void 0;
var timeDiff = void 0;
var diffDays = void 0;

var DeviceInfo = function (_React$Component) {
  _inherits(DeviceInfo, _React$Component);

  function DeviceInfo() {
    _classCallCheck(this, DeviceInfo);

    return _possibleConstructorReturn(this, (DeviceInfo.__proto__ || Object.getPrototypeOf(DeviceInfo)).apply(this, arguments));
  }

  _createClass(DeviceInfo, [{
    key: "renderSubscription",
    value: function renderSubscription() {
      createdDate = new Date(this.props.data.node.createdAt);
      createdDate.setDate(createdDate.getDate() + 365);
      todayDate = new Date(Date.now());
      todayDate.setDate(todayDate.getDate());
      timeDiff = Math.abs(todayDate - createdDate);
      diffDays = Math.ceil(timeDiff / (1000 * 3600 * 24));
      if (diffDays > 1) {
        return _react2.default.createElement(
          "li",
          { className: "list-group-item" },
          _react2.default.createElement(
            "div",
            { className: "data-label" },
            "Subscription Ends In"
          ),
          _react2.default.createElement(
            "div",
            { className: "data-value" },
            diffDays,
            " Days"
          )
        );
      }
      return _react2.default.createElement(
        "li",
        { className: "list-group-item list-group-item-danger" },
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          "Your Subscription is expired"
        )
      );
    }
  }, {
    key: "render",
    value: function render() {
      if (!this.props.data.node || !this.props.data.node.meta) {
        return _react2.default.createElement("div", null);
      }

      var _props$data$node$meta = this.props.data.node.meta,
          name = _props$data$node$meta.name,
          model = _props$data$node$meta.model;
      var _props$data$node$devi = this.props.data.node.devices.edges[0].node.meta,
          macId = _props$data$node$devi.macId,
          hardwareVersion = _props$data$node$devi.hardwareVersion,
          firmwareVersion = _props$data$node$devi.firmwareVersion,
          batchNumber = _props$data$node$devi.batchNumber;

      return _react2.default.createElement(
        "div",
        null,
        _react2.default.createElement(
          "ul",
          { className: "list-group data-list" },
          this.renderSubscription()
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "ul",
          { className: "list-group data-list" },
          DeviceInfo.renderType(),
          DeviceInfo.renderName(name),
          DeviceInfo.renderModel(model)
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "ul",
          { className: "list-group data-list" },
          DeviceInfo.renderHardware(hardwareVersion),
          DeviceInfo.renderFirmware(firmwareVersion),
          DeviceInfo.renderBatch(batchNumber)
        ),
        _react2.default.createElement("br", null),
        _react2.default.createElement(
          "ul",
          { className: "list-group data-list" },
          DeviceInfo.renderMACId(macId)
        )
      );
    }
  }], [{
    key: "renderType",
    value: function renderType() {
      return _react2.default.createElement(
        "li",
        { className: "list-group-item" },
        _react2.default.createElement(
          "div",
          { className: "data-label" },
          "Type"
        ),
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          "Air Conditioner"
        )
      );
    }
  }, {
    key: "renderName",
    value: function renderName(name) {
      if (name === undefined || name === null) {
        return _react2.default.createElement("div", null);
      }

      return _react2.default.createElement(
        "li",
        { className: "list-group-item" },
        _react2.default.createElement(
          "div",
          { className: "data-label" },
          "Name"
        ),
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          name
        )
      );
    }
  }, {
    key: "renderModel",
    value: function renderModel(model) {
      if (model === undefined || model === null) {
        return _react2.default.createElement("div", null);
      }

      return _react2.default.createElement(
        "li",
        { className: "list-group-item" },
        _react2.default.createElement(
          "div",
          { className: "data-label" },
          "Model"
        ),
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          model
        )
      );
    }
  }, {
    key: "renderHardware",
    value: function renderHardware(hardwareVersion) {
      if (hardwareVersion === undefined || hardwareVersion === null) {
        return _react2.default.createElement("div", null);
      }
      return _react2.default.createElement(
        "li",
        { className: "list-group-item" },
        _react2.default.createElement(
          "div",
          { className: "data-label" },
          "Hardware Version"
        ),
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          hardwareVersion
        )
      );
    }
  }, {
    key: "renderFirmware",
    value: function renderFirmware(firmwareVersion) {
      if (firmwareVersion === undefined || firmwareVersion === null) {
        return _react2.default.createElement("div", null);
      }

      return _react2.default.createElement(
        "li",
        { className: "list-group-item" },
        _react2.default.createElement(
          "div",
          { className: "data-label" },
          "Firmware Version"
        ),
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          firmwareVersion
        )
      );
    }
  }, {
    key: "renderBatch",
    value: function renderBatch(batchNumber) {
      if (batchNumber === undefined || batchNumber === null) {
        return _react2.default.createElement("div", null);
      }

      return _react2.default.createElement(
        "li",
        { className: "list-group-item" },
        _react2.default.createElement(
          "div",
          { className: "data-label" },
          "Batch Number"
        ),
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          batchNumber
        )
      );
    }
  }, {
    key: "renderMACId",
    value: function renderMACId(macId) {
      if (macId === undefined || macId === null) {
        return _react2.default.createElement("div", null);
      }

      return _react2.default.createElement(
        "li",
        { className: "list-group-item" },
        _react2.default.createElement(
          "div",
          { className: "data-label" },
          "MAC ID"
        ),
        _react2.default.createElement(
          "div",
          { className: "data-value" },
          macId
        )
      );
    }
  }]);

  return DeviceInfo;
}(_react2.default.Component);

exports.default = DeviceInfo;


DeviceInfo.propTypes = propTypes;
DeviceInfo.defaultProps = defaultProps;