'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _DataList = require('bluerain-ui/lib/DataList/DataList');

var _DataList2 = _interopRequireDefault(_DataList);

var _DataListItem = require('bluerain-ui/lib/DataList/DataListItem');

var _DataListItem2 = _interopRequireDefault(_DataListItem);

var _DataListItemLabel = require('bluerain-ui/lib/DataList/DataListItemLabel');

var _DataListItemLabel2 = _interopRequireDefault(_DataListItemLabel);

var _DataListItemValue = require('bluerain-ui/lib/DataList/DataListItemValue');

var _DataListItemValue2 = _interopRequireDefault(_DataListItemValue);

var _reactFa = require('react-fa');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  wifiName: _react.PropTypes.string,
  onClick: _react.PropTypes.func,
  secure: _react.PropTypes.string
};

var AddDeviceSecondScreen = function (_React$Component) {
  _inherits(AddDeviceSecondScreen, _React$Component);

  function AddDeviceSecondScreen(props) {
    _classCallCheck(this, AddDeviceSecondScreen);

    var _this = _possibleConstructorReturn(this, (AddDeviceSecondScreen.__proto__ || Object.getPrototypeOf(AddDeviceSecondScreen)).call(this, props));

    _this.wifiName = 'WifiName';
    _this.secure = '';
    _this.clickHandler = function (event) {

      event.preventDefault();
      if (_this.onClick) {
        _this.onClick(event, {
          wifiName: _this.wifiName,
          secure: _this.secure
        });
      }
    };
    return _this;
  }

  _createClass(AddDeviceSecondScreen, [{
    key: 'getLockIcon',
    value: function getLockIcon() {
      if (this.secure) {
        return _react2.default.createElement(
          _DataListItemValue2.default,
          null,
          _react2.default.createElement(_reactFa.Icon, { name: 'lock' })
        );
      }
      return _react2.default.createElement('span', null);
    }
  }, {
    key: 'render',
    value: function render() {
      this.wifiName = this.props.wifiName || this.wifiName;
      this.onClick = this.props.onClick;
      this.secure = this.props.secure || this.secure;

      return _react2.default.createElement(
        _DataList2.default,
        null,
        _react2.default.createElement(
          _DataListItem2.default,
          { style: { cursor: 'pointer' }, action: true, chevronRight: true, onClick: this.clickHandler },
          _react2.default.createElement(
            _DataListItemLabel2.default,
            null,
            _react2.default.createElement(
              'div',
              null,
              this.wifiName
            )
          ),
          this.getLockIcon()
        )
      );
    }
  }]);

  return AddDeviceSecondScreen;
}(_react2.default.Component);

AddDeviceSecondScreen.propTypes = propTypes;

exports.default = AddDeviceSecondScreen;