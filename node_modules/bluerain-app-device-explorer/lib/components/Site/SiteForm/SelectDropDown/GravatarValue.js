"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require("react");

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 1/27/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var propTypes = {
  children: _react.PropTypes.node,
  value: _react.PropTypes.object
};

var defaultProps = {};

var GravatarValue = function (_React$Component) {
  _inherits(GravatarValue, _React$Component);

  function GravatarValue() {
    _classCallCheck(this, GravatarValue);

    return _possibleConstructorReturn(this, (GravatarValue.__proto__ || Object.getPrototypeOf(GravatarValue)).apply(this, arguments));
  }

  _createClass(GravatarValue, [{
    key: "render",
    value: function render() {
      return _react2.default.createElement(
        "div",
        { className: "Select-value" },
        _react2.default.createElement(
          "span",
          { className: "Select-value-label" },
          _react2.default.createElement("img", {
            style: {
              borderRadius: 3,
              display: 'inline-block',
              marginRight: 10,
              position: 'relative',
              top: -2,
              verticalAlign: 'middle',
              width: '15px',
              height: '15px'
            },
            src: this.props.value.icon, role: "presentation"
          }),
          this.props.children
        )
      );
    }
  }]);

  return GravatarValue;
}(_react2.default.Component);

exports.default = GravatarValue;

GravatarValue.propTypes = propTypes;
GravatarValue.defaultProps = defaultProps;