'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('bluerain-bootstrap-theme/dist/css/components/data-list.css');

var _AddDeviceFirstScreen = require('../../../components/Device/AddDevice/FirstScreen/AddDeviceFirstScreen.widget');

var _AddDeviceFirstScreen2 = _interopRequireDefault(_AddDeviceFirstScreen);

var _Loading = require('./Loading');

var _Loading2 = _interopRequireDefault(_Loading);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  getStore: _react.PropTypes.func,
  updateStoreData: _react.PropTypes.func,
  updateStoreMacId: _react.PropTypes.func,
  jumpToStep: _react.PropTypes.func

};

/* in this step we will show user the basic first screen
 after he clicks the next button we will show the loading component*/

var Step1 = function (_React$Component) {
  _inherits(Step1, _React$Component);

  function Step1(props) {
    _classCallCheck(this, Step1);

    var _this = _possibleConstructorReturn(this, (Step1.__proto__ || Object.getPrototypeOf(Step1)).call(this, props));

    _this.state = {
      stateFlag: true
    };

    return _this;
  }

  _createClass(Step1, [{
    key: 'onsubmit',
    value: function onsubmit() {}
  }, {
    key: 'handleState',
    value: function handleState(value) {
      this.setState({ stateFlag: value });
    }
  }, {
    key: 'isValidated',
    value: function isValidated() {
      var _this2 = this;

      // if(this.state.stateFlag===false ){
      this.props.getStore().localSDK.getList(function (data) {

        if (data.error) {

          _this2.setState({
            stateFlag: false
          });
        } else {
          _this2.setState({
            stateFlag: true

          });

          _this2.props.updateStoreData(data);
          _this2.props.updateStoreMacId(data.macid);
          _this2.props.jumpToStep(1);
        }
      });
      // }


      // event.preventDefault();
      //  this.setState({ step: 'loading' });
      if (this.props.getStore().data.networks) {

        return true;
      }
      this.setState({
        stateFlag: false
      });
      return false;
    }
  }, {
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        'div',
        { className: 'step Step1' },
        this.state.stateFlag ? _react2.default.createElement(_AddDeviceFirstScreen2.default, { onSubmit: this.onsubmit }) : _react2.default.createElement(_Loading2.default, { handleState: this.handleState.bind(this), statevalue: 1 })
      );
    }
  }]);

  return Step1;
}(_react2.default.Component);

exports.default = Step1;


Step1.propTypes = propTypes;