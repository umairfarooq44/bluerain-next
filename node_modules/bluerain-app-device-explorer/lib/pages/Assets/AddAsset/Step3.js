'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('bluerain-bootstrap-theme/dist/css/components/data-list.css');

var _localsdk = require('localsdk');

var _localsdk2 = _interopRequireDefault(_localsdk);

var _AddDeviceThirdScreen = require('../../../components/Device/AddDevice/ThirdScreen/AddDeviceThirdScreen.widget');

var _AddDeviceThirdScreen2 = _interopRequireDefault(_AddDeviceThirdScreen);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var localSDK = new _localsdk2.default();

var propTypes = {
  getStore: _react.PropTypes.func,
  jumpToStep: _react.PropTypes.func,
  updateStoreSsid: _react.PropTypes.func,
  updateStorePassword: _react.PropTypes.func
};

// in this step we will take the password from a user depending on the wifi

var Step3 = function (_React$Component) {
  _inherits(Step3, _React$Component);

  function Step3(props) {
    _classCallCheck(this, Step3);

    var _this = _possibleConstructorReturn(this, (Step3.__proto__ || Object.getPrototypeOf(Step3)).call(this, props));

    _this.state = {
      stateFlag: true
    };
    return _this;
  }

  _createClass(Step3, [{
    key: 'connectWifi',
    value: function connectWifi(ssiid, password) {
      var _this2 = this;

      // this.setState({ step: 'loading' });

      var data = {
        mqtt: {
          ip: '52.57.50.168',
          port: 3881,
          url: 'mqtt.mevris.io'
        }
      };

      this.props.getStore().localSDK.configure(data, function (response) {

        if (response.error === 0) {

          var wifiSetting = {
            ssid: ssiid,
            passphrase: password,
            protocol: 'DHCP'
          };
          localSDK.setWifi(wifiSetting, function (response) {});
        } else {

          _this2.props.jumpToStep(0);
        }
      });
    }

    // when user enters submit buttton after entering password

  }, {
    key: 'handleSubmit',
    value: function handleSubmit() {
      var _this3 = this;

      return function (event, data) {

        _this3.props.updateStoreSsid(data.ssId);
        _this3.props.updateStorePassword(data.password);
        // this condition will redirect u to loading and from there to state 1
        // show when either of field is empty i.e mostly password
        if (_this3.props.getStore().ssid !== '' && _this3.props.getStore().password !== '') {
          _this3.connectWifi(data.ssid, data.password);
          _this3.setState({
            stateFlag: false
          });
        } else {

          _this3.setState({
            stateFlag: true
          });
        }
      };
    }
  }, {
    key: 'isValidated',
    value: function isValidated() {
      if (this.state.stateFlag === true && this.props.getStore().password !== '') {

        return true;
      }
      return false;
    }
  }, {
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        'div',
        { className: 'step Step3' },
        this.state.stateFlag ? _react2.default.createElement(_AddDeviceThirdScreen2.default, { ssId: this.props.getStore().wifiName, onSubmit: this.handleSubmit() }) : this.props.jumpToStep(3)
      );
    }
  }]);

  return Step3;
}(_react2.default.Component);

exports.default = Step3;


Step3.propTypes = propTypes;