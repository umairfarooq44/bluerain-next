'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('bluerain-bootstrap-theme/dist/css/components/data-list.css');

var _reactstrap = require('reactstrap');

var _AddDeviceSecondScreen = require('../../../components/Device/AddDevice/SecondScreen/AddDeviceSecondScreen.widget');

var _AddDeviceSecondScreen2 = _interopRequireDefault(_AddDeviceSecondScreen);

var _reactFa = require('react-fa');

var _ListViewItem = require('bluerain-ui/lib/ListView/ListViewItem');

var _ListViewItem2 = _interopRequireDefault(_ListViewItem);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  getStore: _react.PropTypes.func,
  updateStoreData: _react.PropTypes.func,
  updateStoreMacId: _react.PropTypes.func,
  jumpToStep: _react.PropTypes.func,
  updateStoreWifiName: _react.PropTypes.func
};

// in this step we will show user the list of the available wifi

var Step2 = function (_React$Component) {
  _inherits(Step2, _React$Component);

  function Step2(props) {
    _classCallCheck(this, Step2);

    var _this = _possibleConstructorReturn(this, (Step2.__proto__ || Object.getPrototypeOf(Step2)).call(this, props));

    _this.state = {
      stateFlag: 0,
      ssid: '',
      password: '',
      display: "none",
      displayList: "block",
      networkListBtnDisplay: "none",
      addNetworkBtnDisplay: "block",
      refreshListBtnDisplay: "block",
      warningMessageDivDisplay: "block"
    };
    return _this;
  }

  _createClass(Step2, [{
    key: 'connectWifi',
    value: function connectWifi(ssid) {
      var _this2 = this;

      // wifi connection function to establish connection of access point to internet

      var data = {
        mqtt: {
          ip: '52.57.50.168',
          port: 3881,
          url: 'mqtt.mevris.io'
        }
      };

      this.props.getStore().localSDK.configure(data, function (response) {

        if (response.error === 0) {

          var wifiSetting = {
            ssid: ssid,
            protocol: 'DHCP'
          };
          _this2.props.getStore().localSDK.setWifi(wifiSetting, function () {
            _this2.props.jumpToStep(3);
          });
        } else {

          _this2.props.jumpToStep(0);
        }
      });
    }

    // this function is called when user selects a particular WIFI

  }, {
    key: 'performAction',
    value: function performAction() {
      var _this3 = this;

      return function (event, data) {
        if (data.secure === "1") {
          // set wifiName and move to authentication
          _this3.props.updateStoreWifiName(data.wifiName);
          _this3.props.jumpToStep(2);
        } else {
          _this3.connectWifi(data.wifiName);
        }
      };
    }
  }, {
    key: 'isValidated',
    value: function isValidated() {

      return false;
    }
  }, {
    key: 'refetchList',
    value: function refetchList(event) {
      var _this4 = this;

      this.props.getStore().localSDK.getList(function (data) {
        if (data.error) {

          _this4.setState({
            stateFlag: false
          });
        } else {
          _this4.setState({
            stateFlag: true

          });

          _this4.props.updateStoreData(data);
          _this4.props.updateStoreMacId(data.macid);
        }
      });
    }
  }, {
    key: 'addNetwork',
    value: function addNetwork(event) {
      this.setState({
        display: "block",
        displayList: "none",
        networkListBtnDisplay: "block",
        addNetworkBtnDisplay: "none",
        refreshListBtnDisplay: "none",
        warningMessageDivDisplay: "none"
      });
    }
  }, {
    key: 'showNetworks',
    value: function showNetworks(event) {
      this.setState({
        display: "none",
        displayList: "block",
        networkListBtnDisplay: "none",
        addNetworkBtnDisplay: "block",
        refreshListBtnDisplay: "block",
        warningMessageDivDisplay: "block"
      });
    }
  }, {
    key: 'handleChange',
    value: function handleChange(event) {
      this.setState({
        ssid: event.target.value
      });
    }
  }, {
    key: 'handleChangeD',
    value: function handleChangeD(event) {
      this.setState({
        password: event.target.value
      });
    }
  }, {
    key: 'onSubmit',
    value: function onSubmit(event) {
      var _this5 = this;

      var data = {
        mqtt: {
          ip: '52.57.50.168',
          port: 3881,
          url: 'mqtt.mevris.io'
        }
      };
      this.props.getStore().localSDK.configure(data, function (response) {

        if (response.error === 0) {

          var wifiSetting = {
            ssid: _this5.state.ssid,
            passphrase: _this5.state.password,
            protocol: 'DHCP'
          };
          _this5.props.getStore().localSDK.setWifi(wifiSetting, function () {
            _this5.props.jumpToStep(3);
          });
        } else {

          _this5.props.jumpToStep(0);
        }
      });
      event.preventDefault();
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { className: 'step Step2' },
        _react2.default.createElement(
          'form',
          { style: { "display": this.state.display }, onSubmit: this.onSubmit.bind(this) },
          _react2.default.createElement(
            _ListViewItem2.default,
            null,
            _react2.default.createElement(
              'label',
              { htmlFor: 'name' },
              'SSID'
            ),
            _react2.default.createElement('input', {
              type: 'text', value: this.state.ssid,
              onChange: this.handleChange.bind(this), className: 'form-control',
              placeholder: 'Enter SSID'
            }),
            _react2.default.createElement(
              'label',
              { htmlFor: 'name' },
              'Password'
            ),
            _react2.default.createElement('input', {
              type: 'password', value: this.state.password,
              onChange: this.handleChangeD.bind(this),
              className: 'form-control',
              placeholder: 'Enter Password'
            }),
            _react2.default.createElement(
              'small',
              { id: 'imageSize', className: 'form-text text-muted' },
              'Enter credentials for your wifi.'
            )
          ),
          _react2.default.createElement(
            _ListViewItem2.default,
            null,
            _react2.default.createElement(
              'button',
              { type: 'submit', className: 'btn btn-primary' },
              'Submit'
            )
          )
        ),
        _react2.default.createElement(
          'div',
          { style: { "display": this.state.warningMessageDivDisplay }, className: 'alert alert-warning', role: 'alert' },
          _react2.default.createElement(_reactFa.Icon, { name: 'warning' }),
          ' ',
          _react2.default.createElement(
            'strong',
            null,
            'Warning!'
          ),
          ' if your wifi network is hidden and not being shown in list, please press Add Network button.'
        ),
        _react2.default.createElement(
          'div',
          { className: 'row' },
          _react2.default.createElement(
            'div',
            { className: 'col-xs-6' },
            _react2.default.createElement(
              _reactstrap.Button,
              { className: 'btn-block', style: { "display": this.state.refreshListBtnDisplay }, color: 'primary', onClick: this.refetchList.bind(this) },
              'Refresh Wi-Fi Networks List'
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'col-xs-6' },
            _react2.default.createElement(
              _reactstrap.Button,
              { className: 'btn-block', style: { "display": this.state.addNetworkBtnDisplay }, color: 'warning', onClick: this.addNetwork.bind(this) },
              'Add Network'
            )
          )
        ),
        _react2.default.createElement(
          _reactstrap.Button,
          { className: 'btn-block', style: { "display": this.state.networkListBtnDisplay }, color: 'primary', onClick: this.showNetworks.bind(this) },
          'Wi-Fi Networks List'
        ),
        _react2.default.createElement('br', null),
        _react2.default.createElement(
          'div',
          { style: { "display": this.state.displayList } },
          _react2.default.createElement(_AddDeviceSecondScreen2.default, {
            networks: this.props.getStore().data.networks,
            clickHandler: this.performAction()
          })
        )
      );
    }
  }]);

  return Step2;
}(_react2.default.Component);

exports.default = Step2;

Step2.propTypes = propTypes;