'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('bluerain-bootstrap-theme/dist/css/components/data-list.css');

var _localsdk = require('localsdk');

var _localsdk2 = _interopRequireDefault(_localsdk);

var _AddDeviceFourthScreen = require('../../../components/Device/AddDevice/FourthScreen/AddDeviceFourthScreen.widget');

var _AddDeviceFourthScreen2 = _interopRequireDefault(_AddDeviceFourthScreen);

var _Loading = require('./Loading');

var _Loading2 = _interopRequireDefault(_Loading);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var localSDK = new _localsdk2.default();

// in this step we will show if device is connected
// to internet or show the device could not be connected

var Step4 = function (_React$Component) {
  _inherits(Step4, _React$Component);

  function Step4(props) {
    _classCallCheck(this, Step4);

    var _this = _possibleConstructorReturn(this, (Step4.__proto__ || Object.getPrototypeOf(Step4)).call(this, props));

    _this.state = {
      stateFlag: false,
      reason: ''

    };

    var data = { data: 'connected' };

    localSDK.getStatus(data, function (response) {
      if (response.connected === 1) {
        _this.setState({
          stateFlag: true,
          connectedTo: '' + response.SSID
        });
      } else {

        if (response.reason === undefined) {
          _this.setState({ reason: 'Device could not be connected ' });
        } else {

          _this.setState({ reason: ' ' + response.reason + '!' });
        }
        _this.setState({ stateFlag: false });
      }
    });

    return _this;
  }

  _createClass(Step4, [{
    key: 'isValidated',
    value: function isValidated() {
      if (window.location.search && window.location.search.search('state') && window.location.search.search('state') !== -1) {
        history.back();
      }
      if (this.state.stateFlag !== false) {
        return true;
      }
      return false;
    }
  }, {
    key: 'render',
    value: function render() {

      return _react2.default.createElement(
        'div',
        null,
        this.state.stateFlag ? _react2.default.createElement(_AddDeviceFourthScreen2.default, null) : _react2.default.createElement(_Loading2.default, { reason: this.state.reason })
      );
    }
  }]);

  return Step4;
}(_react2.default.Component);

exports.default = Step4;