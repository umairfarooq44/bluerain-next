'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactstrap = require('reactstrap');

var _bluerainClientServices = require('bluerain-client-services');

var _PrimaryAppNav = require('bluerain-ui/lib/Nav/PrimaryAppNav');

var _PrimaryAppNav2 = _interopRequireDefault(_PrimaryAppNav);

var _SecondaryAppNav = require('bluerain-ui/lib/Nav/SecondaryAppNav');

var _SecondaryAppNav2 = _interopRequireDefault(_SecondaryAppNav);

var _reactRouter = require('react-router');

var _AssetLocation = require('../../../components/Asset/AssetLocation');

var _AssetLocation2 = _interopRequireDefault(_AssetLocation);

var _urlBuilder = require('../../../routes/urlBuilder');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 2/28/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var propTypes = {
  title: _react.PropTypes.string,
  systemNav: _react.PropTypes.func,
  location: _react.PropTypes.func
};

var defaultProps = {
  title: 'Assets Locations'
};

var AssetLocationPage = function (_React$Component) {
  _inherits(AssetLocationPage, _React$Component);

  function AssetLocationPage() {
    _classCallCheck(this, AssetLocationPage);

    return _possibleConstructorReturn(this, (AssetLocationPage.__proto__ || Object.getPrototypeOf(AssetLocationPage)).apply(this, arguments));
  }

  _createClass(AssetLocationPage, [{
    key: 'renderPrimaryNav',
    value: function renderPrimaryNav() {
      var title = this.props.title;
      var toggle = this.props.systemNav.actions.toggle;
      // const previous = {
      //   title: 'Sites',
      //   url: '/app/device-explorer'
      // };

      return _react2.default.createElement(
        _PrimaryAppNav2.default,
        { title: title, toggleMenu: toggle },
        _react2.default.createElement(
          _reactRouter.Link,
          { to: '/app/device-explorer/site/new' },
          _react2.default.createElement(
            _reactstrap.Button,
            { color: 'primary' },
            _react2.default.createElement('i', { className: 'fa fa-plus hidden-sm-up' }),
            _react2.default.createElement(
              'span',
              {
                className: 'hidden-xs-down'
              },
              'Add Site'
            )
          )
        ),
        '\xA0'
      );
    }
  }, {
    key: 'renderSecondaryNav',
    value: function renderSecondaryNav() {
      var pathname = this.props.location.pathname;

      return _react2.default.createElement(_SecondaryAppNav2.default, {
        items: [{
          label: 'Grid View',
          url: '/app/device-explorer',
          class: pathname === (0, _urlBuilder.sitesGridViewUrl)() ? 'active' : ''
        }, {
          label: 'Map View',
          url: '/app/device-explorer/asset_locations',
          class: pathname === (0, _urlBuilder.sitesMapViewUrl)() ? 'active' : ''
        }]
      });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        null,
        this.renderPrimaryNav(),
        this.renderSecondaryNav(),
        AssetLocationPage.renderContent()
      );
    }
  }], [{
    key: 'renderContent',
    value: function renderContent() {
      return _react2.default.createElement(
        _reactstrap.Row,
        null,
        _react2.default.createElement(
          _reactstrap.Col,
          { lg: '12' },
          _react2.default.createElement(_AssetLocation2.default, null)
        )
      );
    }
  }]);

  return AssetLocationPage;
}(_react2.default.Component);

AssetLocationPage.propTypes = propTypes;
AssetLocationPage.defaultProps = defaultProps;

exports.default = (0, _bluerainClientServices.withSystemNav)((0, _reactRouter.withRouter)(AssetLocationPage));

// <Link to="/app/device-explorer/transfer_requests"><Button color="primary"><i className="fa fa-plus hidden-sm-up"  /><span className="hidden-xs-down">Transfer Requests</span></Button></Link>&nbsp;