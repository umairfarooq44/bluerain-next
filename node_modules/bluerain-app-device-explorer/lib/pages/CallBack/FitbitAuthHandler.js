'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _superagent = require('superagent');

var _superagent2 = _interopRequireDefault(_superagent);

var _reactApollo = require('react-apollo');

var _SaveAccessTokenMutation = require('../../components/Asset/FitbitSensorInfo/SaveAccessTokenMutation.graphql');

var _SaveAccessTokenMutation2 = _interopRequireDefault(_SaveAccessTokenMutation);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by atif on 2/8/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

/* global localStorage */
/* global window */


var propTypes = {
  mutate: _react.PropTypes.func,
  location: _react.PropTypes.object
};

var defaultProps = {
  title: 'Reports'
};

var FitbitAuthHandler = function (_React$Component) {
  _inherits(FitbitAuthHandler, _React$Component);

  function FitbitAuthHandler() {
    _classCallCheck(this, FitbitAuthHandler);

    var _this = _possibleConstructorReturn(this, (FitbitAuthHandler.__proto__ || Object.getPrototypeOf(FitbitAuthHandler)).call(this));

    _this.updateAccessToken = _this.updateAccessToken.bind(_this);
    return _this;
  }

  _createClass(FitbitAuthHandler, [{
    key: 'updateAccessToken',
    value: function updateAccessToken(accessToken, accessTokenTime) {
      var variables = {
        meta: {
          access_token: accessToken,
          access_token_time: accessTokenTime
        },
        deviceName: 'Fitbit Tracker',
        globalId: 'RGV2aWNlOlV6NkhxaVNtOUM='
      };

      this.props.mutate({
        variables: variables
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _this2 = this;

      var authenticationCode = this.props.location.query.code;
      var accessToken = void 0;

      _superagent2.default.post('https://api.fitbit.com/oauth2/token').send({
        clientId: '22844P',
        grant_type: 'authorization_code',
        redirect_uri: 'http://localhost:9020/app/device-explorer/fitbit/callback',
        code: authenticationCode
      }).set('Authorization', 'Basic MjI4NDRQOjRkM2IyY2U5Yjc2NGM0NTM5YzZhMGEwZmVmMjliNzM4').set('Content-Type', 'application/x-www-form-urlencoded').end(function (err, res) {
        if (err) {
          console.log('Error', err);
        } else {
          accessToken = res.body.access_token;
          var timeNow = new Date();
          localStorage.setItem('fitbit-access-token', accessToken);
          localStorage.setItem('fitbit-access-token-time', timeNow);
          _this2.updateAccessToken(accessToken, timeNow);
          window.location = 'http://localhost:9020/app/device-explorer';
        }
      });

      return _react2.default.createElement(
        'p',
        null,
        'Fitbit authenticated redirecting to home ...'
      );
    }
  }]);

  return FitbitAuthHandler;
}(_react2.default.Component);

FitbitAuthHandler.propTypes = propTypes;
FitbitAuthHandler.defaultProps = defaultProps;
exports.default = (0, _reactApollo.graphql)(_SaveAccessTokenMutation2.default)(FitbitAuthHandler);