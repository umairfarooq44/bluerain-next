import React, { PropTypes } from 'react';
import PlayerButtons from 'bluerain-ui/lib/Controls/ButtonIconControl';
import SliderControl from '../ControlItems/SliderControl';

const propTypes = {
  // player buttons
  play: PropTypes.func,
  pause: PropTypes.func,
  forward: PropTypes.func,
  backward: PropTypes.func,

  // Volume
  onVolumeChange: PropTypes.func,
  volume: PropTypes.number,
  disableVolume: PropTypes.bool,
  minVolume: PropTypes.number,
  maxVolume: PropTypes.number,
  volumeStep: PropTypes.number
};

const defaultProps = {
  // Volume
  onVolumeChange: () => {
  },
  volume: 26,
  disableVolume: false,
  minVolume: 0,
  maxVolume: 100,
  volumeStep: 1
};

export default class SonosControlComponent extends React.Component {

  // constructor(props) {
  //   super(props);
  //
  //   // this.state = {
  //   //   standby: props.standby,
  //   //   disableStandby: props.disableStandby,
  //   //   setpoint: props.setpoint,
  //   //   disableSetpoint: props.disableSetpoint,
  //   //   disableFanSpeed: props.disableFanSpeed,
  //   //   disableMode: props.disableMode
  //   // };
  // }

  componentWillReceiveProps(props) {
    this.setState(props);
  }

  getButtonsControl() {
    //  const { standby, disableStandby } = this.state;

    return (
      <PlayerButtons
        play={this.props.play}
        pause={this.props.pause}
        forward={this.props.forward}
        backward={this.props.backward}
      />
    );
  }

  getVolumeControl() {
    const {
      onVolumeChange,
      volume,
      disableVolume,
      minVolume,
      maxVolume,
      volumeStep
    } = this.props;

    return (
      <SliderControl
        label="Volume"
        min={minVolume}
        max={maxVolume}
        step={volumeStep}
        value={volume}
        disabled={disableVolume}
        onDragStop={onVolumeChange}
        className="list-group-item"
      />
    );
  }

  render() {
    return (
      <div className="card list-group device-control-list">
        {this.getButtonsControl()}
        {this.getVolumeControl()}
      </div>
    );
  }
}

SonosControlComponent.propTypes = propTypes;
SonosControlComponent.defaultProps = defaultProps;
