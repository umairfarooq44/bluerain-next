import React, { PropTypes } from 'react';
import MuiThemeProvider from 'material-ui/styles/MuiThemeProvider';
import getMuiTheme from 'material-ui/styles/getMuiTheme';
import Slider from 'material-ui/Slider';

const propTypes = {
  label: PropTypes.string,
  disabled: PropTypes.bool,
  className: PropTypes.string,
  selectionColor: PropTypes.string,
  trackColor: PropTypes.string,
  rippleColor: PropTypes.string,
  min: PropTypes.number,
  max: PropTypes.number,
  step: PropTypes.number,
  value: PropTypes.number,
  onChange: PropTypes.func,
  onDragStart: PropTypes.func,
  onDragStop: PropTypes.func,
};

const defaultProps = {
  label: '',
  disabled: false,
  className: '',
  min: 0,
  max: 100,
  step: 1,
  value: 50,
  onChange: () => {
  },
  onDragStart: () => {
  },
  onDragStop: () => {
  },
};

const style = {
  control: {
    display: 'flex'
  },
  label: {
    flexGrow: 1
  },
  value: {
    paddingLeft: 10,
    fontWeight: 'bold'
  }
};


export default class SliderControl extends React.Component {

  constructor(props) {
    super(props);

    this.onChange = this.onChange.bind(this);
    this.onDragStart = this.onDragStart.bind(this);
    this.onDragStop = this.onDragStop.bind(this);

    this.state = {
      value: props.value,
      disabled: props.disabled
    };
  }

  componentWillReceiveProps(props) {
    if (props.value !== undefined) {
      this.setState({ value: props.value });
    }
    if (props.disabled !== undefined) {
      this.setState({ disabled: props.disabled });
    }
  }

  onChange(ev, value) {
    this.setState({
      value,
    });

    this.props.onChange(value);
  }

  onDragStart() {
    this.props.onDragStart(this.state.value);
  }

  onDragStop() {
    this.props.onDragStop(this.state.value);
  }

  render() {
    const {
      value,
    } = this.state;

    const {
      label,
      min,
      max,
      step,
      className,
      selectionColor,
      trackColor,
      rippleColor,
      disabled,
    } = this.props;

    const theme = {
      selectionColor,
      trackColor,
      rippleColor
    };
    const muiTheme = getMuiTheme({
      slider: theme,
    });

    return (
      <div className={`device-control-item slider-control ${className}`}>
        <div style={style.control}>
          <div className="control-label" style={style.label}>
            {label}
          </div>
          <div className="control-value" style={style.value}>
            {value}
          </div>
        </div>
        <MuiThemeProvider muiTheme={muiTheme}>
          <Slider
            value={value}
            disabled={disabled}
            min={min}
            max={max}
            step={step}
            className="control-slider"
            onChange={this.onChange}
            onDragStart={this.onDragStart}
            onDragStop={this.onDragStop}
            sliderStyle={{ marginBottom: '5px' }}
          />
        </MuiThemeProvider>
      </div>
    );
  }
}

SliderControl.propTypes = propTypes;
SliderControl.defaultProps = defaultProps;
