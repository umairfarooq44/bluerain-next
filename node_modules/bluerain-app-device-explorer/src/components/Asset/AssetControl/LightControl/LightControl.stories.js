/**
 * Created by amna on 02/02/17.
 */
import React from 'react';
import { toGlobalId } from 'graphql-relay';
import { storiesOf, action } from '@kadira/storybook';
import { withKnobs, text, boolean, number, color } from '@kadira/storybook-addon-knobs';
import LightControl from './index';
import LightControlComponent from './LightControl.component';

const stories = storiesOf('Light Control', module);
stories.addDecorator(withKnobs);

stories.addWithInfo('Full Control with live data', () => {

  let globalId = text('Parent Global ID', 'QXNzZXQ6NVBlZ3RMZHZBQQ==');
  const parseId = text('Parent Parse ID', '');

  if (!globalId && parseId) {
    globalId = toGlobalId('Asset', parseId);
  }

  return (<LightControl assetId={globalId} />);
});


stories.addWithInfo('Light Control in Standby Mode', () => (
  <LightControlComponent
    standby={boolean('Standby', true)}
    disableStandby={boolean('Disable Standby', false)}
    onStandbyToggle={action('Standby Toggle')}

    color={color('Color')}
    disableColor={boolean('Disable Color', false)}
    onColorChangeComplete={action('Color Changed')}

    brightness={number('Brightness', 26)}
    disableBrightness={boolean('Disable Brightness', false)}
    minBrightness={number('Min Brightness', 0)}
    maxBrightness={number('Max Brightness', 100)}
    brightnessStep={number('Brightness Set', 1)}
    onBrightnessChange={action('Brightness Change')}

    colorTemperature={number('Color Temperature', 5000)}
    disableColorTemperature={boolean('Disable Color Temperature', false)}
    minColorTemperature={number('Min Color Temperature', 3500)}
    maxColorTemperature={number('Max Color Temperature', 9000)}
    colorTemperatureStep={number('Color Temperature Set', 100)}
    onColorTemperatureChange={action('Color Temperature Change')}
  />
));

stories.addWithInfo('Light Control in connected mode', () => (
  <LightControlComponent
    standby={boolean('Standby', false)}
    disableStandby={boolean('Disable Standby', false)}
    onStandbyToggle={action('Standby Toggle')}

    color={color('Color')}
    disableColor={boolean('Disable Color', false)}
    onColorChangeComplete={action('Color Changed')}

    brightness={number('Brightness', 26)}
    disableBrightness={boolean('Disable Brightness', false)}
    minBrightness={number('Min Brightness', 0)}
    maxBrightness={number('Max Brightness', 100)}
    brightnessStep={number('Brightness Set', 1)}
    onBrightnessChange={action('Brightness Change')}

    colorTemperature={number('Color Temperature', 5000)}
    disableColorTemperature={boolean('Disable Color Temperature', false)}
    minColorTemperature={number('Min Color Temperature', 3500)}
    maxColorTemperature={number('Max Color Temperature', 9000)}
    colorTemperatureStep={number('Color Temperature Set', 100)}
    onColorTemperatureChange={action('Color Temperature Change')}
  />
));
