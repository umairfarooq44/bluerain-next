/**
 * Created by anser on 12/27/16.
 */
import React from 'react';
import { toGlobalId } from 'graphql-relay';
import { storiesOf, action } from '@kadira/storybook';
import { withKnobs, text, boolean, number, object, color } from '@kadira/storybook-addon-knobs';
import AirConditionerControl from './index';
import AirConditionerControlComponent from './AirConditionerControl.component';

const stories = storiesOf('AirConditioner Control', module);
stories.addDecorator(withKnobs);

stories.addWithInfo('Full Control with live data', () => {

  let globalId = text('Parent Global ID', 'QXNzZXQ6NGFQeG5ZeHlmWg==');
  const parseId = text('Parent Parse ID', '');

  if (!globalId && parseId) {
    globalId = toGlobalId('Site', parseId);
  }

  return (<AirConditionerControl assetId={globalId} />);

});


stories.addWithInfo('AC in Standby Mode', () => (
  <AirConditionerControlComponent
    standby={boolean('Standby', true)}
    disableStandby={boolean('Disable Standby', false)}
    onStandbyToggle={action('Standby Toggle')}

    thermostatSetpoint={number('Setpoint', 26)}
    disableSetpoint={boolean('Disable Setpoint', false)}
    setpointSelectionColor={color('Selection Color')}
    setpointTrackColor={color('Track Color')}
    minSetpoint={number('Min Setpoint', 16)}
    maxSetpoint={number('Max Setpoint', 32)}
    setpointStep={number('Setpoint Set', 1)}
    onSetpointChange={action('Setpoint Change')}

    thermostatFanMode={text('Fan Speed', 'high')}
    disableFanSpeed={boolean('Disable Fan Speed', false)}
    onFanSpeedChange={action('Fan Speed Change')}
    fanSpeedOptions={object('Fan Speed Options', [
      {
        label: 'Low',
        value: 'low'
      }, {
        label: 'Mid',
        value: 'mid'
      }, {
        label: 'High',
        value: 'high'
      }, {
        label: 'Auto',
        value: 'auto'
      }
    ])}

    thermostatMode={text('Mode', 'cool')}
    disableMode={boolean('Disable Mode', false)}
    onModeChange={action('Mode Change')}
    modeOptions={object('Mode Options', [
      {
        label: 'Cool',
        value: 'cool'
      }, {
        label: 'Heat',
        value: 'heat'
      }, {
        label: 'Dry',
        value: 'dry'
      }, {
        label: 'Auto',
        value: 'auto'
      }
    ])}
  />
));

stories.addWithInfo('AC in ON state', () => (
  <AirConditionerControlComponent
    standby={boolean('Standby', false)}
    disableStandby={boolean('Disable Standby', false)}
    onStandbyToggle={action('Standby Toggle')}

    thermostatSetpoint={number('Setpoint', 26)}
    disableSetpoint={boolean('Disable Setpoint', false)}
    setpointSelectionColor={color('Selection Color')}
    setpointTrackColor={color('Track Color')}
    minSetpoint={number('Min Setpoint', 16)}
    maxSetpoint={number('Max Setpoint', 32)}
    setpointStep={number('Setpoint Set', 1)}
    onSetpointChange={action('Setpoint Change')}

    thermostatFanMode={text('Fan Speed', 'high')}
    disableFanSpeed={boolean('Disable Fan Speed', false)}
    onFanSpeedChange={action('Fan Speed Change')}
    fanSpeedOptions={object('Fan Speed Options', [
      {
        label: 'Low',
        value: 'low'
      }, {
        label: 'Mid',
        value: 'mid'
      }, {
        label: 'High',
        value: 'high'
      }, {
        label: 'Auto',
        value: 'auto'
      }
    ])}

    thermostatMode={text('Mode', 'cool')}
    disableMode={boolean('Disable Mode', false)}
    onModeChange={action('Mode Change')}
    modeOptions={object('Mode Options', [
      {
        label: 'Cool',
        value: 'cool'
      }, {
        label: 'Heat',
        value: 'heat'
      }, {
        label: 'Dry',
        value: 'dry'
      }, {
        label: 'Auto',
        value: 'auto'
      }
    ])}
  />
));

