/**
 * Created by atif on 12/18/16.
 */
import React, { PropTypes } from 'react';
import Widget from 'bluerain-ui/lib/Widget/widget';
import WidgetTitle from 'bluerain-ui/lib/Widget/widgetTitle';
import WidgetHeader from 'bluerain-ui/lib/Widget/widgetHeader';
import WidgetContent from 'bluerain-ui/lib/Widget/widgetContent';
import { Container } from 'reactstrap';
import { Link } from 'react-router';
import Slider from 'react-slick';
import OverlaySlider from 'bluerain-ui/lib/Slider/OverlaySlider';
import { SingleDatePicker } from 'react-dates';
import 'react-dates/lib/css/_datepicker.css';
import moment from 'moment';
import '../../../../css/custom_datepicker.css';
import registry from '../../../../components/ComponentRegistry';
// const BillChart = registry.getComponent('BillChart', 'Generic').content;
const CurrentChart = registry.getComponent('CurrentChart', 'Generic').content;
const EnergySavingChart = registry.getComponent('EnergySavingChart', 'Generic').content;
const EnergyChart = registry.getComponent('EnergyChart', 'Generic').content;
const PowerChart = registry.getComponent('PowerChart', 'Generic').content;
// const TemperatureChart = registry.getComponent('TemperatureChart', 'Generic').content;
// const TimeChart = registry.getComponent('TimeChart', 'Generic').content;
const VoltageChart = registry.getComponent('VoltageChart', 'Generic').content;


const propTypes = {
  assetId: PropTypes.string
};

const defaultProps = {
  assetId: ''
};

export default class ChartSliderWidget extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      focused: false,
      date: moment(),
    };

    this.onDateChange = this.onDateChange.bind(this);
    this.onFocusChange = this.onFocusChange.bind(this);
  }

  onDateChange(date) {
    this.setState({ date });
  }

  onFocusChange({ focused }) {
    this.setState({ focused });
  }

  render() {
    const { focused, date } = this.state;
    const assetId = this.props.assetId;
    const startDateFormatted = moment(date).utc().startOf('day').toISOString();
    const endDateFormatted = moment(date).utc().endOf('day').toISOString();

    const settings = {
      dots: true,
      infinite: false,
      adaptiveHeight: false,
      speed: 500,
      slidesToShow: 3,
      arrows: false,
      slidesToScroll: 1,
      responsive: [
        {
          breakpoint: 1200,
          settings: {
            slidesToShow: 3,
            slidesToScroll: 3,
            infinite: true
          }
        },
        {
          breakpoint: 992,
          settings: {
            slidesToShow: 3,
            slidesToScroll: 3
          }
        },
        {
          breakpoint: 768,
          settings: {
            slidesToShow: 2,
            slidesToScroll: 2
          }
        },
        {
          breakpoint: 576,
          settings: {
            slidesToShow: 1,
            slidesToScroll: 1
          }
        }
      ]
    };

    const reportBaseUrl = `/app/device-explorer/assets/${assetId}`;

    return (
      <Widget style={{ marginBottom: 0 }}>
        <Container>
          <WidgetHeader>
            <WidgetTitle>Reports</WidgetTitle>
            <SingleDatePicker
              {...this.props}
              id="date_input"
              date={date}
              numberOfMonths={1}
              focused={focused}
              onDateChange={this.onDateChange}
              onFocusChange={this.onFocusChange}
              isOutsideRange={() => false}
            />
          </WidgetHeader>
        </Container>
        <WidgetContent>
          <OverlaySlider>
            <Slider {...settings}>
              {/* <div>*/}
              {/* <TemperatureChart*/}
              {/* linkTag={Link}*/}
              {/* to={`${reportBaseUrl}/reports/temperature`}*/}
              {/* assetId={assetId}*/}
              {/* startDate={startDateFormatted}*/}
              {/* endDate={endDateFormatted}*/}
              {/* queryString=""*/}
              {/* />*/}
              {/* </div>*/}
              {/* <div>
               <BillChart
               linkTag={Link}
               to={`${reportBaseUrl}/reports/bill`}
               assetId={assetId}
               startDate={startDateFormatted}
               endDate={endDateFormatted}
               queryString=""
               />
               </div>*/}
              <div>
                <EnergyChart
                  linkTag={Link}
                  to={`${reportBaseUrl}/reports/energy`}
                  assetId={assetId}
                  startDate={startDateFormatted}
                  endDate={endDateFormatted}
                  queryString=""
                />
              </div>
              <div>
                <CurrentChart
                  linkTag={Link}
                  to={`${reportBaseUrl}/reports/current`}
                  assetId={assetId}
                  startDate={startDateFormatted}
                  endDate={endDateFormatted}
                  queryString=""
                />
              </div>
              <div>
                <EnergySavingChart
                  linkTag={Link}
                  to={`${reportBaseUrl}/reports/energy-saving`}
                  assetId={assetId}
                  startDate={startDateFormatted}
                  endDate={endDateFormatted}
                  queryString=""
                />
              </div>
              <div>
                <VoltageChart
                  linkTag={Link}
                  to={`${reportBaseUrl}/reports/voltage`}
                  assetId={assetId}
                  startDate={startDateFormatted}
                  endDate={endDateFormatted}
                  queryString=""
                />
              </div>
              <div>
                <PowerChart
                  linkTag={Link}
                  to={`${reportBaseUrl}/reports/power`}
                  assetId={assetId}
                  startDate={startDateFormatted}
                  endDate={endDateFormatted}
                  queryString=""
                />
              </div>
              {/* <div>
               <TimeChart
               linkTag={Link}
               to={`${reportBaseUrl}/reports/time`}
               assetId={assetId}
               startDate={startDateFormatted}
               endDate={endDateFormatted}
               queryString=""
               />
               </div>*/}
            </Slider>
          </OverlaySlider>
        </WidgetContent>
      </Widget>

    );
  }
}

ChartSliderWidget.propTypes = propTypes;
ChartSliderWidget.defaultProps = defaultProps;
