/**
 * Created by anser on 12/30/16.
 */
import React, { PropTypes } from 'react';
import DataList from 'bluerain-ui/lib/DataList/DataList';
import DataListItem from 'bluerain-ui/lib/DataList/DataListItem';
import DataListItemLabel from 'bluerain-ui/lib/DataList/DataListItemLabel';
import DataListItemValue from 'bluerain-ui/lib/DataList/DataListItemValue';


const propTypes = {
  data: PropTypes.object,
};
let obj;
let arrKey;
let arrVal;
const defaultProps = {};

export default class EventParameter extends React.Component {
  render() {
    try {
      obj = this.props.data.node.data.params ? this.props.data.node.data.params : this.props.data.node.data;
      arrKey = Object.keys(obj);
      arrVal = Object.values(obj);
      if (arrKey.indexOf('ambientTemperature') > -1) {
        const myIndex = arrKey.indexOf('ambientTemperature');
        arrKey.splice(myIndex, 1);
        arrVal.splice(myIndex, 1);
      }
      if (arrKey[0] === 'firmwareVersion') {
        return (
          <DataList>
            {
              arrVal.map((object, i) => (
                <DataListItem action={false} chevronRight={false} key={i}>
                  <DataListItemLabel>
                    {arrKey[0]}
                  </DataListItemLabel>
                  <DataListItemValue>
                    {arrVal[0].newVersion.toString()}
                  </DataListItemValue>
                </DataListItem>
              ))
            }
          </DataList>
        );
      }
      return (
        <DataList>
          {
            arrVal.map((object, i) => (
              <DataListItem action={false} chevronRight={false} key={i}>
                <DataListItemLabel>
                  {arrKey[i]}
                </DataListItemLabel>
                <DataListItemValue>
                  {arrVal[i].toString()}
                </DataListItemValue>
              </DataListItem>
            ))
          }
        </DataList>
      );


    } catch (error) {
      console.log(error);
    }
  }
}

EventParameter.propTypes = propTypes;
EventParameter.defaultProps = defaultProps;
