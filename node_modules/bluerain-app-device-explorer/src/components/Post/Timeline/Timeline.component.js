import React, { PropTypes } from 'react';
import PostCard from 'bluerain-ui/lib/Card/PostCard/PostCard.component';
import { Link } from 'react-router';
import { Collapse } from 'react-collapse';
import moment from 'moment';

const propTypes = {
  posts: PropTypes.array
};

const defaultProps = {
  posts: []
};

let user;
let imageUrl;
let initiator;
let source;
class TimelineComponent extends React.Component {

  static renderPost(post) {
    let description = post.description;
    switch (post.type && post.type.toUpperCase()) {
      case 'USER_COMMAND':
        if (post.accounts && post.accounts.edges.length !== 0 && post.accounts.edges[0] && post.accounts.edges[0].node !== null) {
          user = post.accounts.edges[0].node;
          imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/default-user.jpg';
          if (user.profilePicture && user.profilePicture.url) {
            imageUrl = user.profilePicture.url;
          } else {
            imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/default-user.jpg';
          }
          source = 'Web App';

          initiator = (user.firstName && user.lastName) ? `${user.firstName} ${user.lastName}` : user.username;
        }
        break;
      case 'DEVICE_REGISTRATION':
        if (post.accounts && post.accounts.edges.length !== 0 && post.accounts.edges[0] && post.accounts.edges[0].node !== null) {
          user = post.accounts.edges[0].node;
          if (user.profilePicture && user.profilePicture.url) {
            imageUrl = user.profilePicture.url;
          } else {
            imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/default-user.jpg';
          }
          source = 'Web App';
          initiator = `${user.firstName} ${user.lastName}`;
        }
        break;
      case 'REGISTER':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/register_icon.svg';
        initiator = '';
        source = 'Web App';
        description = `${description} at ${moment(post.time).format('LLL')}`;
        break;
      case 'SCHEDULE':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/schedule.svg';
        initiator = '';
        source = 'Scheduled App';
        break;
      case 'FIRMWARE_UPGRADE':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/firmware_update.jpg';
        initiator = '';
        source = 'Network';
        break;
      case 'ALERT':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/error_icon.png';
        initiator = '';
        source = 'Device';
        break;
      case 'IR_CONTROL':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/remote.svg';
        initiator = '';
        source = 'Remote';
        break;
      case 'FLOW_RULE_EXECUTED':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/node-red-icon.svg';
        initiator = '';
        source = 'Automated Rule';
        break;
      case 'CONNECTION':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/device-offline.svg';
        initiator = '';
        source = 'Network';
        break;
      case 'DOOR_OPEN':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/icon-fridge-door-open.svg';
        initiator = '';
        source = 'Network';
        break;
      case 'DOOR_CLOSED':
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/icon-fridge-door-close.svg';
        initiator = '';
        source = 'Network';
        break;
      default:
        imageUrl = 'https://s3-us-west-2.amazonaws.com/bluerainimages/default-user.jpg';
        initiator = '';
        source = '';
    }

    const assetId = post.assets.edges.length !== 0 && post.assets.edges[0] ? post.assets.edges[0].node.id : 'noId';
    // const eventId = '123'; // post.events.edges[0].node.id;
    const data = {
      description,
      initiator,
      time: post.time,
      source,
      roundImage: true,
      image: imageUrl,
      // image: user.profilePicture.url || 'https://s3-us-west-2.amazonaws.com/bluerainimages/default-user.jpg',
      userProfileLink: '',
      href: `/app/device-explorer/assets/${assetId}/posts/${post.id}`
    };
    if (data.description && data.description.includes('rgb(')) {

      const index = data.description.indexOf('rgb');
      const strOut = data.description.substr(index);
      const style = {
        width: 24,
        height: 10,
        borderRadius: 7,
        backgroundColor: strOut,
        display: 'inline-block'
      };
      data.description = <span>changed color to <div style={style} /></span>;
    }
    return (
      <PostCard
        key={post.id}
        initiator={data.initiator}
        description={data.description}
        time={data.time}
        source={data.source}
        roundImage={data.roundImage}
        image={data.image}
        userProfileLink={data.userProfileLink}
        linkTag={Link}
        to={data.href}
      />
    );
  }

  render() {
    let posts = this.props.posts;
    posts = posts.sort((a, b) => (a.time < b.time) ? 1 : ((b.time < a.time) ? -1 : 0));
    return (
      <div>
        <Collapse isOpened>
          {posts.map(post => TimelineComponent.renderPost(post))}
        </Collapse>
      </div> );
  }
}

TimelineComponent.propTypes = propTypes;
TimelineComponent.defaultProps = defaultProps;

export default TimelineComponent;
