import 'bluerain-bootstrap-theme/dist/css/components/timeline.css';
import React, { PropTypes } from 'react';
import { withLoadingBar } from 'bluerain-client-services';
import TimelineComponent from './Timeline.component';
import Waypoint from 'react-waypoint';


const propTypes = {
  data: PropTypes.object,
  showLoading: PropTypes.func,
  assetId: PropTypes.string,
  hideLoading: PropTypes.func
};

const defaultProps = {
  data: {}
};

class TimelineContainer extends React.Component {
  _handleEnter = (props) => {
    this.handleLoadMore();
  }
  handleLoadMore = () => {
    const { endCursor } = this.props.data.node.posts.pageInfo;
    if (endCursor) {
      this.props.showLoading();
      this.props.data.fetchMore({
        variables: { assetId: this.props.assetId, before: endCursor },
        updateQuery: (previousResult, { fetchMoreResult }) => {
          const node = Object.assign({}, previousResult.node, {
            posts: {
              __typename: fetchMoreResult.node.posts.__typename,
              pageInfo: fetchMoreResult.node.posts.pageInfo,
              edges: [...fetchMoreResult.node.posts.edges, ...previousResult.node.posts.edges],
            }
          });
          return Object.assign({}, previousResult, { node });
        },
      });
    }
  }

  componentWillReceiveProps(props) {
    if (!props.data.loading) {
      this.props.hideLoading();
    }
  }

  render() {
    let posts = [];
    const { endCursor } = this.props.data.node.posts.pageInfo;
    try {
      posts = this.props.data.node.posts.edges;
      posts = posts.map(post => post.node);
    } catch (error) {
      console.log(error);
    }

    const btnStyle = {
      width: '100%',
      height: "50px",
      fontSize: "16px"
    }
    // console.log('this.props.data.loading : ', this.props.data.loading);
    const containerStyle = {
      marginBottom: "10px",
      marginTop: "10px",
      textAlign: "center"
    }
    return (
      <div>
        <TimelineComponent posts={posts} {...this.props} />
        <Waypoint onEnter={(props) => this._handleEnter(props)} />
        { endCursor ?
          <button ref="abc" style={btnStyle} className="btn btn-outline-secondary"
                  onClick={this.handleLoadMore}>{this.props.data.loading ? 'Loading' : 'Load More'}</button>
          :
          <div style={containerStyle}>
            <div className="alert alert-info" role="alert">
              <strong>Heads up!</strong> All posts have been loaded.
            </div>
          </div>
        }
      </div>
    );
  }
}

TimelineContainer.propTypes = propTypes;
TimelineContainer.defaultProps = defaultProps;

export default withLoadingBar(TimelineContainer);
