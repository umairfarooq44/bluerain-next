/**
 * Created by anser on 6/29/17.
 */

import React, { PropTypes } from 'react';
import { graphql } from 'react-apollo';
import { browserHistory } from 'react-router';
import { fromGlobalId } from 'graphql-relay';
import { Button, Modal, ModalHeader, ModalBody, ModalFooter } from 'reactstrap';
import { withNotifications } from '../../Notifications/withNotifications';
import SiteUpdateMutation from './mutation.graphql';
import Query from './query.graphql';

const propTypes = {
  data: PropTypes.object,
  mutate: PropTypes.func,
  onError: PropTypes.func,
  notification: PropTypes.object,
  onClick: PropTypes.func
};

const defaultProps = {
  onClick: () => {
  }
};


class SiteDelete extends React.Component {

  constructor(props) {
    super(props);
    this.state = {
      modal: false
    };
    this.toggle = this.toggle.bind(this);
    this.handleClickAction = this.handleClickAction.bind(this);
  }

  toggle(event) {
    const assetsCount = this.props.data.node.assets.edges.length;
    const { addNotification } = this.props.notification;
    if (assetsCount > 0) {
      addNotification({
        title: 'Alert',
        message: 'This site contains assets, you cannot delete this site unless you move your assets to some other site',
        status: 'error',
        dismissible: true,
        dismissAfter: 10000,
        position: 'br',
        level: 'error'
      });
      event.preventDefault();
      return false;
    }
    this.setState({
      modal: !this.state.modal
    });
  }

  handleClickAction(event) {
    const { addNotification } = this.props.notification;
    const variables = {
      where: {
        id: fromGlobalId(this.props.data.node.id).id
      },
      data: {
        isDeleted: true
      }
    };
    // mutation to update asset
    this.props.mutate({
      variables
    });
    addNotification({
      title: 'Success',
      message: 'Site deleted successfully',
      status: 'success',
      dismissible: true,
      dismissAfter: 3000,
      position: 'br',
      level: 'success'
    });
    browserHistory.push('/app/device-explorer');
    event.preventDefault();
  }

  render() {
    return (
      <div>
        <ul className="list-group data-list">
          <li className="list-group-item list-group-item-danger">
            <div onClick={this.toggle} style={{"cursor": "pointer"}} className="data-value">Delete Site</div>
          </li>
        </ul>
        <Modal isOpen={this.state.modal} toggle={this.toggle}>
          <ModalHeader toggle={this.toggle}>Confirm!</ModalHeader>
          <ModalBody>
            Are you sure you want to delete this site?
          </ModalBody>
          <ModalFooter>
            <Button color="primary" onClick={this.handleClickAction}>Delete Site</Button>{' '}
            <Button color="secondary" onClick={this.toggle}>Cancel</Button>
          </ModalFooter>
        </Modal>
      </div>
    );
  }
}


// export default SiteEditForm;

export default (
  graphql(SiteUpdateMutation, {
    options: {
      refetchQueries: [
        'SitesFetchQuery',
      ]
    }
  })(
    graphql(Query, {
      options: ({ siteId }) => (
        { variables: { siteId } }
      )
    })(
      withNotifications(SiteDelete)
    )
  )
);
SiteDelete.propTypes = propTypes;
SiteDelete.defaultProps = defaultProps;
