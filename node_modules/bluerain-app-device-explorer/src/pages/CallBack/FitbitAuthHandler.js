/**
 * Created by atif on 2/8/17.
 */

/* global localStorage */
/* global window */
import React, { PropTypes } from 'react';
import request from 'superagent';
import { graphql } from 'react-apollo';
import SaveAccessTokenMutation from '../../components/Asset/FitbitSensorInfo/SaveAccessTokenMutation.graphql';

const propTypes = {
  mutate: PropTypes.func,
  location: PropTypes.object
};

const defaultProps = {
  title: 'Reports'
};

class FitbitAuthHandler extends React.Component {

  constructor() {
    super();

    this.updateAccessToken = this.updateAccessToken.bind(this);
  }

  updateAccessToken(accessToken, accessTokenTime) {
    const variables = {
      meta: {
        access_token: accessToken,
        access_token_time: accessTokenTime
      },
      deviceName: 'Fitbit Tracker',
      globalId: 'RGV2aWNlOlV6NkhxaVNtOUM='
    };

    this.props.mutate({
      variables
    });
  }

  render() {

    const authenticationCode = this.props.location.query.code;
    let accessToken;

    request
    .post('https://api.fitbit.com/oauth2/token')
    .send({
      clientId: '22844P',
      grant_type: 'authorization_code',
      redirect_uri: 'http://localhost:9020/app/device-explorer/fitbit/callback',
      code: authenticationCode
    }
    )
    .set('Authorization', 'Basic MjI4NDRQOjRkM2IyY2U5Yjc2NGM0NTM5YzZhMGEwZmVmMjliNzM4')
    .set('Content-Type', 'application/x-www-form-urlencoded')
    .end((err, res) => {
      if (err) {
        console.log('Error', err);
      } else {
        accessToken = res.body.access_token;
        const timeNow = new Date();
        localStorage.setItem('fitbit-access-token', accessToken);
        localStorage.setItem('fitbit-access-token-time', timeNow);
        this.updateAccessToken(accessToken, timeNow);
        window.location = 'http://localhost:9020/app/device-explorer';
      }
    });

    return (
      <p>
        Fitbit authenticated redirecting to home ...
      </p>
    );
  }
}

FitbitAuthHandler.propTypes = propTypes;
FitbitAuthHandler.defaultProps = defaultProps;
export default graphql(SaveAccessTokenMutation)(FitbitAuthHandler);
