import React, { PropTypes } from 'react';
import 'bluerain-bootstrap-theme/dist/css/components/data-list.css';
import LocalSdk from 'localsdk';
import { withRouter } from 'react-router';
import StepZilla from 'react-stepzilla';
import PrimaryAppNav from 'bluerain-ui/lib/Nav/PrimaryAppNav';
import { Container, Row, Col } from 'reactstrap';
import { sitePageUrl } from '../../../routes/urlBuilder';
import Step1 from './Step1';
import Step2 from './Step2';
import Step3 from './Step3';
import Recheck from './Recheck';
import Step4 from './Step4';
import Step5 from './Step5';


// const localSDK = new LocalSdk('localhost:8080')

const localSDDK = new LocalSdk();
// let macId = '';

const propTypes = {
  router: PropTypes.object
};

class AddAssetComponent extends React.Component {
  constructor(props) {
    super(props);

    this.state = {
      step: 1
    };


    this.sampleStore = {
      data: {},
      macId: '',
      localSDK: localSDDK,
      wifiName: '',
      password: '',
      ssid: '',
      siteid: this.props.router.params.siteId,


    };


  }

  getStore() {
    return this.sampleStore;
  }


  // following are the different functions which are used to update different values related to AC
  // and to made them available across all the steps
  updateStoreLocalSDK(data) {
    this.setState({ localSDK: localSDDK });
  }

  updateStoreData(data) {
    this.sampleStore.data = data;
  }

  updateStoreMacId(macId) {
    this.sampleStore.macId = macId;
  }

  updateStoreWifiName(wifiname) {
    this.sampleStore.wifiName = wifiname;
  }

  updateStorePassword(password) {
    this.sampleStore.password = password;
  }

  updateStoreSsid(ssid) {
    this.sampleStore.ssid = ssid;
  }


  render() {

    const title = 'Add Device';

    const previous = {
      title: this.props.router.location.query.siteName,
      url: sitePageUrl(this.props.router.params.siteId)
    };
    // passing different steps in the stepzilla //
    const steps = [
      {
        name: 'AC-AP',
        component: <Step1
          getStore={() => (this.getStore())} updateStoreData={(u) => {
            this.updateStoreData(u);
          }} updateStoreMacId={(u) => {
            this.updateStoreMacId(u);
          }} updateStoreWifiName={(u) => {
            this.updateStoreWifiName(u);
          }}
        />
      },
      {
        name: 'WI-FI',
        component: <Step2
          showNavigation={false} getStore={() => (this.getStore())} updateStoreData={(u) => {
            this.updateStoreData(u);
          }} updateStoreMacId={(u) => {
            this.updateStoreMacId(u);
          }} updateStoreWifiName={(u) => {
            this.updateStoreWifiName(u);
          }}
        />
      },
      {
        name: 'Connect',
        component: <Step3
          getStore={() => (this.getStore())} updateStoreData={(u) => {
            this.updateStoreData(u);
          }} updateStoreMacId={(u) => {
            this.updateStoreMacId(u);
          }} updateStoreWifiName={(u) => {
            this.updateStoreWifiName(u);
          }} updateStorePassword={(u) => {
            this.updateStorePassword(u);
          }} updateStoreSsid={(u) => {
            this.updateStoreSsid(u);
          }}
        />
      },
      {
        name: 'Connecting',
        component: <Recheck
          getStore={() => (this.getStore())} updateStoreData={(u) => {
            this.updateStoreData(u);
          }} updateStoreMacId={(u) => {
            this.updateStoreMacId(u);
          }} updateStoreWifiName={(u) => {
            this.updateStoreWifiName(u);
          }}
        />
      },

      {
        name: 'Status',
        component: <Step4
          getStore={() => (this.getStore())} updateStoreData={(u) => {
            this.updateStoreData(u);
          }} updateStoreMacId={(u) => {
            this.updateStoreMacId(u);
          }} updateStoreWifiName={(u) => {
            this.updateStoreWifiName(u);
          }} updateStorePassword={(u) => {
            this.updateStorePassword(u);
          }}
          updateStoreSsid={(u) => {
            this.updateStoreSsid(u);
          }}
        />
      },
      {
        name: 'Add-device',
        component: <Step5
          getStore={() => (this.getStore())} updateStoreData={(u) => {
            this.updateStoreData(u);
          }} updateStoreMacId={(u) => {
            this.updateStoreMacId(u);
          }} updateStoreWifiName={(u) => {
            this.updateStoreWifiName(u);
          }} updateStorePassword={(u) => {
            this.updateStorePassword(u);
          }}
          updateStoreSsid={(u) => {
            this.updateStoreSsid(u);
          }}
        />
      }
    ];

    return (
      <div>
        <PrimaryAppNav title={title} previous={previous} />
        <section>
          <Container>
            <Row>
              <Col md={{ size: 10, offset: 1 }} className="col-faded">
                <div className="step-progress">
                  <StepZilla
                    steps={steps} stepsNavigation={false} prevBtnOnLastStep={false} backButtonText={'Prev'}
                    preventEnterSubmission
                  />
                </div>
              </Col>
            </Row>
          </Container>
        </section>
      </div>

    );
  }
}
AddAssetComponent.propTypes = propTypes;
export default withRouter(AddAssetComponent);
