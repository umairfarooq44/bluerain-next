import React, { PropTypes } from 'react';
import 'bluerain-bootstrap-theme/dist/css/components/data-list.css';
import LocalSdk from 'localsdk';
import AddDeviceThirdScreenWidget from '../../../components/Device/AddDevice/ThirdScreen/AddDeviceThirdScreen.widget';

const localSDK = new LocalSdk();


const propTypes = {
  getStore: PropTypes.func,
  jumpToStep: PropTypes.func,
  updateStoreSsid: PropTypes.func,
  updateStorePassword: PropTypes.func
};

// in this step we will take the password from a user depending on the wifi
export default class Step3 extends React.Component {

  constructor(props) {
    super(props);

    this.state = {
      stateFlag: true
    };
  }

  connectWifi(ssiid, password) {
    // this.setState({ step: 'loading' });

    const data = {
      mqtt: {
        ip: '52.57.50.168',
        port: 3881,
        url: 'mqtt.mevris.io'
      }
    };

    this.props.getStore().localSDK.configure(data, (response) => {

      if (response.error === 0) {

        const wifiSetting = {
          ssid: ssiid,
          passphrase: password,
          protocol: 'DHCP'
        };
        localSDK.setWifi(wifiSetting, (response) => {
        });
      } else {

        this.props.jumpToStep(0);

      }
    });


  }

// when user enters submit buttton after entering password
  handleSubmit() {

    return (event, data) => {

      this.props.updateStoreSsid(data.ssId);
      this.props.updateStorePassword(data.password);
      // this condition will redirect u to loading and from there to state 1
      // show when either of field is empty i.e mostly password
      if (this.props.getStore().ssid !== '' && this.props.getStore().password !== '') {
        this.connectWifi(data.ssid, data.password);
        this.setState({
          stateFlag: false
        });
      } else {

        this.setState({
          stateFlag: true
        });
      }
    };

  }

  isValidated() {
    if (this.state.stateFlag === true && this.props.getStore().password !== '') {

      return true;
    }
    return false;
  }

  render() {

    return (

      <div className="step Step3">
        {this.state.stateFlag ? (
          <AddDeviceThirdScreenWidget ssId={this.props.getStore().wifiName} onSubmit={this.handleSubmit()} />
          ) : (

            this.props.jumpToStep(3)

          )}

      </div>
    );
  }
}

Step3.propTypes = propTypes;
