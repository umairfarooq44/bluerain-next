import React, { PropTypes } from 'react';
import ProgressLabel from 'react-progress-label';

const propTypes = {
  handleState: PropTypes.func,
  statevalue: PropTypes.String,
  reason: PropTypes.String
};
export default class Loading extends React.Component {

  constructor(props) {
    super();

    this.state = {
      text: 'Checking if connection is established correctly',
      progress: 1,
      text2: ''
    };
  }


  componentDidMount() {
    this.interval = setInterval(() => {
      let progress = this.state.progress;

      if (progress === 100) {
        if (this.props.statevalue === 1) {
          this.props.handleState(true);
        }

        clearInterval(this.interval);
        this.setState({ text: 'Check if Your device is Connected Properly' });
        this.setState({ text2: 'Check if Your device is Connected Properly' });
        if (this.props.reason !== '') {
          this.setState({ text: this.props.reason });
        }
        return;
      }

      progress++;
      this.setState({ progress });

    }, 200);
  }

  componentWillUnmount() {

    if (this.interval) {
      clearInterval(this.interval);
    }

  }

  render() {
    const style1 = {
      padding: 10,
      margin: 10,
      backgroundColor: '#ececec',
      color: '#333',
      fontfamily: 'monospace',
      fontSize: 32,
      textAlign: 'center',
      textColor: '#23a3ba'
    };
    return (

      <div style={style1}>


        {this.state.text ? (
            <p >
              {this.state.text}
            </p>
          ) : (
            <p >
              {this.state.text2}
            </p>

          )}


        <ProgressLabel
          progress={this.state.progress}
          startDegree={0}
          progressWidth={50}
          trackWidth={50}
          cornersWidth={12}
          size={200}
          fillColor="#f3f3f3"
          trackColor="#23a3ba"
          progressColor="#bff3fc"
        >
          <text>{this.state.progress}</text>
        </ProgressLabel>

      </div>
    );
  }
}

Loading.propTypes = propTypes;
