/**
 * Created by anser on 5/23/17.
 */

import React from 'react';
import { shallow } from 'enzyme';
import TestUtils from 'react-addons-test-utils';

import LightControl from '../../../../src/components/Asset/AssetControl/LightControl/LightControl.component';

describe('LightControl Component Test Specifications', () => {

  it('should find toggle switch and current toggle state with standby true', () => {
    const wrapper = shallow(
      <LightControl standby />
    );
    const toggle = wrapper.find('[label="Power"]');
    expect(toggle.props().toggled).toBe(false);
  });

  it('should find toggle switch and current toggle state with standby false', () => {
    const wrapper = shallow(
      <LightControl standby={false} />
    );
    const toggle = wrapper.find('[label="Power"]');
    expect(toggle.props().toggled).toBe(true);
  });

  it('only toggle switch div is found when standby is true', () => {
    const component = TestUtils.renderIntoDocument( <LightControl standby /> );
    const div = TestUtils.scryRenderedDOMComponentsWithClass(component, 'list-group-item');
    expect(div.length).toEqual(1);
  });

  it('all 4 control divs are found when standby is false', () => {
    const component = TestUtils.renderIntoDocument( <LightControl standby={false} /> );
    const divs = TestUtils.scryRenderedDOMComponentsWithClass(component, 'list-group-item');
    expect(divs.length).toEqual(4);
  });

  it('should find color control and current control value if standby is false', () => {
    const wrapper = shallow(
      <LightControl standby={false} color="red" />
    );
    const slider = wrapper.find('[label="Color"]');
    expect(slider.props().value).toBe('red');
  });

  it('should find brightness slider and current slider value if standby is false', () => {
    const wrapper = shallow(
      <LightControl standby={false} brightness={25} />
    );
    const slider = wrapper.find('[label="Brightness"]');
    expect(slider.props().value).toBe(25);
  });

  it('should find color temperature slider and current slider value if standby is false', () => {
    const wrapper = shallow(
      <LightControl standby={false} colorTemperature={25} />
    );
    const slider = wrapper.find('[label="Color Temperature"]');
    expect(slider.props().value).toBe(25);
  });

});
