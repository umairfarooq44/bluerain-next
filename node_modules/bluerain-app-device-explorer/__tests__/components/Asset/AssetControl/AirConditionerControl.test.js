/**
 * Created by anser on 5/23/17.
 */

import React from 'react';
import { shallow } from 'enzyme';
import TestUtils from 'react-addons-test-utils';

import AirConditionerControl from '../../../../src/components/Asset/AssetControl/AirConditionerControl/AirConditionerControl.component';

describe('AirConditionerControl Component Test Specifications', () => {

  it('should find toggle switch and current toggle state with standby true', () => {
    const wrapper = shallow(
      <AirConditionerControl standby />
    );
    const toggle = wrapper.find('[label="Standby"]');
    expect(toggle.props().toggled).toBe(false);
  });

  it('should find toggle switch and current toggle state with standby false', () => {
    const wrapper = shallow(
      <AirConditionerControl standby={false} />
    );
    const toggle = wrapper.find('[label="Standby"]');
    expect(toggle.props().toggled).toBe(true);
  });

  it('only toggle switch div is found when standby is true', () => {
    const component = TestUtils.renderIntoDocument( <AirConditionerControl standby /> );
    const div = TestUtils.scryRenderedDOMComponentsWithClass(component, 'list-group-item');
    expect(div.length).toEqual(1);
  });

  it('all 4 control divs are found when standby is false', () => {
    const component = TestUtils.renderIntoDocument( <AirConditionerControl standby={false} /> );
    const divs = TestUtils.scryRenderedDOMComponentsWithClass(component, 'list-group-item');
    expect(divs.length).toEqual(4);
  });

  it('should find slider and current slider value if standby is false', () => {
    const wrapper = shallow(
      <AirConditionerControl standby={false} setpoint={25} />
    );
    const slider = wrapper.find('[label="Temperature"]');
    expect(slider.props().value).toBe(25);
  });

  it('should find mode drop-down and current drop-down value if standby is false', () => {
    const wrapper = shallow(
      <AirConditionerControl standby={false} mode={25} />
    );
    const dropDown = wrapper.find('[label="Mode"]');
    expect(dropDown.props().value).toBe(25);
  });

  it('should find fan-speed drop-down and current drop-down value if standby is false', () => {
    const wrapper = shallow(
      <AirConditionerControl standby={false} fanSpeed={25} />
    );
    const dropDown = wrapper.find('[label="Fan Speed"]');
    expect(dropDown.props().value).toBe(25);
  });

});
