'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactRouter = require('react-router');

var _reactFa = require('react-fa');

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _reactstrap = require('reactstrap');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; } /**
                                                                                                                                                                                                                              * Created by anser on 12/6/16.
                                                                                                                                                                                                                              */

var propTypes = {
  tag: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.string]),
  className: _react.PropTypes.string
};

var defaultProps = {
  tag: 'li'
};

var ListViewItem = function ListViewItem(props) {
  var chevronRight = props.chevronRight,
      action = props.action,
      children = props.children,
      url = props.url,
      attributes = _objectWithoutProperties(props, ['chevronRight', 'action', 'children', 'url']);

  // Classes


  var className = (0, _classnames2.default)('', {
    'list-group-item-action': action
  }, props.className);

  // Chevron
  var chevron = '';
  if (chevronRight === true) {
    chevron = _react2.default.createElement(
      'div',
      { className: 'list-group-item-icon' },
      _react2.default.createElement(_reactFa.Icon, { name: 'chevron-right' })
    );
  }

  return _react2.default.createElement(
    _reactstrap.ListGroupItem,
    _extends({}, attributes, { className: className }),
    children,
    chevron
  );
};

ListViewItem.propTypes = propTypes;
ListViewItem.defaultProps = defaultProps;

exports.default = ListViewItem;