'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('bluerain-bootstrap-theme/dist/css/components/mini-chart-card.css');

var _victory = require('victory');

var _reactstrap = require('reactstrap');

var _CardBlockLabel = require('../CardBlockLabel');

var _CardBlockLabel2 = _interopRequireDefault(_CardBlockLabel);

var _CardBlockValue = require('../CardBlockValue');

var _CardBlockValue2 = _interopRequireDefault(_CardBlockValue);

var _ChartContainer = require('../ChartContainer');

var _ChartContainer2 = _interopRequireDefault(_ChartContainer);

var _CustomCardLink = require('../CustomCardLink');

var _CustomCardLink2 = _interopRequireDefault(_CustomCardLink);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  label: _react.PropTypes.string,
  value: _react.PropTypes.string,
  data: _react.PropTypes.array,
  chartProps: _react.PropTypes.array,
  linkTag: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.string]),
  to: _react.PropTypes.string,
  href: _react.PropTypes.string,
  onClick: _react.PropTypes.func
};

var defaultProps = {
  label: '',
  value: '',
  data: [],
  chartProps: [],
  linkTag: 'a',
  to: '',
  href: '',
  onClick: function onClick() {}
};

var LineMiniChartCard = function (_React$Component) {
  _inherits(LineMiniChartCard, _React$Component);

  function LineMiniChartCard(props) {
    _classCallCheck(this, LineMiniChartCard);

    var _this = _possibleConstructorReturn(this, (LineMiniChartCard.__proto__ || Object.getPrototypeOf(LineMiniChartCard)).call(this, props));

    _this.handleClickAction = _this.handleClickAction.bind(_this);
    return _this;
  }

  _createClass(LineMiniChartCard, [{
    key: 'handleClickAction',
    value: function handleClickAction() {
      this.props.onClick();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          label = _props.label,
          value = _props.value,
          data = _props.data,
          href = _props.href,
          linkTag = _props.linkTag,
          to = _props.to;


      return _react2.default.createElement(
        _reactstrap.Card,
        { onClick: this.handleClickAction, className: 'mini-chart-card card-link-block' },
        _react2.default.createElement(
          _CustomCardLink2.default,
          {
            tag: linkTag,
            to: to,
            href: href
          },
          _react2.default.createElement(
            _reactstrap.CardBlock,
            null,
            _react2.default.createElement(
              _CardBlockLabel2.default,
              null,
              label
            ),
            _react2.default.createElement(
              _CardBlockValue2.default,
              null,
              value
            ),
            _react2.default.createElement(
              _ChartContainer2.default,
              null,
              _react2.default.createElement(_victory.VictoryLine, {
                data: data,
                interpolation: 'cardinal',
                height: 30,
                padding: { top: 2, bottom: 2 },
                style: {
                  data: {
                    stroke: 'tomato',
                    strokeWidth: 1
                  }
                }
              })
            )
          )
        )
      );
    }
  }]);

  return LineMiniChartCard;
}(_react2.default.Component);

exports.default = LineMiniChartCard;


LineMiniChartCard.propTypes = propTypes;
LineMiniChartCard.defaultProps = defaultProps;