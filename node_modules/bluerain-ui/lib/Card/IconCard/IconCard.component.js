'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactstrap = require('reactstrap');

require('bluerain-bootstrap-theme/dist/css/components/icon-card.css');

var _CustomCardLink = require('../CustomCardLink');

var _CustomCardLink2 = _interopRequireDefault(_CustomCardLink);

var _IconCard = require('./IconCard');

var _IconCard2 = _interopRequireDefault(_IconCard);

var _IconCardIcon = require('./IconCardIcon');

var _IconCardIcon2 = _interopRequireDefault(_IconCardIcon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by amna on 12/6/16.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var propTypes = {
  title: _react.PropTypes.string,
  description: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.object, _react.PropTypes.string]),
  icon: _react.PropTypes.string,
  color: _react.PropTypes.string,
  linkTag: _react.PropTypes.oneOfType([_react.PropTypes.func, _react.PropTypes.string]),
  to: _react.PropTypes.string,
  href: _react.PropTypes.string,
  onClick: _react.PropTypes.func
};
var defaultProps = {
  title: '',
  description: {},
  icon: 'music',
  color: 'purple',
  linkTag: 'a',
  to: '',
  href: '',
  onClick: function onClick() {}
};

var _ = require('lodash');

var IconCard = function (_React$Component) {
  _inherits(IconCard, _React$Component);

  _createClass(IconCard, null, [{
    key: 'renderTitle',
    value: function renderTitle(title) {
      return title ? _react2.default.createElement(
        _reactstrap.CardTitle,
        { tag: 'h5', className: 'text-truncate' },
        title
      ) : '';
    }
  }, {
    key: 'renderDescription',
    value: function renderDescription(description) {
      return !_.isEmpty(description) ? _react2.default.createElement(
        _reactstrap.CardText,
        { tag: 'p' },
        description
      ) : '';
    }
  }]);

  function IconCard(props) {
    _classCallCheck(this, IconCard);

    var _this = _possibleConstructorReturn(this, (IconCard.__proto__ || Object.getPrototypeOf(IconCard)).call(this, props));

    _this.handleClickAction = _this.handleClickAction.bind(_this);
    return _this;
  }

  _createClass(IconCard, [{
    key: 'handleClickAction',
    value: function handleClickAction() {
      this.props.onClick();
    }
  }, {
    key: 'render',
    value: function render() {
      var _props = this.props,
          color = _props.color,
          title = _props.title,
          description = _props.description,
          icon = _props.icon,
          linkTag = _props.linkTag,
          to = _props.to,
          href = _props.href;

      return _react2.default.createElement(
        _IconCard2.default,
        { onClick: this.handleClickAction, color: color },
        _react2.default.createElement(
          _CustomCardLink2.default,
          {
            tag: linkTag,
            to: to, href: href
          },
          _react2.default.createElement(
            _reactstrap.CardBlock,
            null,
            _react2.default.createElement(_IconCardIcon2.default, { image: icon }),
            IconCard.renderTitle(title),
            IconCard.renderDescription(description)
          )
        )
      );
    }
  }]);

  return IconCard;
}(_react2.default.Component);

exports.default = IconCard;


IconCard.propTypes = propTypes;
IconCard.defaultProps = defaultProps;