'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
/**
 * Created by anser on 1/3/17.
 */


var propTypes = {
  children: _react.PropTypes.node,
  onFocus: _react.PropTypes.func,
  onSelect: _react.PropTypes.func,
  option: _react.PropTypes.object,
  className: _react.PropTypes.string,
  isFocused: _react.PropTypes.bool
};

var defaultProps = {};

var GravatarOption = function (_React$Component) {
  _inherits(GravatarOption, _React$Component);

  function GravatarOption(props) {
    _classCallCheck(this, GravatarOption);

    var _this = _possibleConstructorReturn(this, (GravatarOption.__proto__ || Object.getPrototypeOf(GravatarOption)).call(this, props));

    _this.handleMouseDown = _this.handleMouseDown.bind(_this);
    _this.handleMouseEnter = _this.handleMouseEnter.bind(_this);
    _this.handleMouseMove = _this.handleMouseMove.bind(_this);
    return _this;
  }

  _createClass(GravatarOption, [{
    key: 'handleMouseDown',
    value: function handleMouseDown(event) {
      event.preventDefault();
      event.stopPropagation();
      this.props.onSelect(this.props.option, event);
    }
  }, {
    key: 'handleMouseEnter',
    value: function handleMouseEnter(event) {
      this.props.onFocus(this.props.option, event);
    }
  }, {
    key: 'handleMouseMove',
    value: function handleMouseMove(event) {
      if (this.props.isFocused) return;
      this.props.onFocus(this.props.option, event);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        {
          className: this.props.className,
          onMouseDown: this.handleMouseDown,
          onMouseEnter: this.handleMouseEnter,
          onMouseMove: this.handleMouseMove
        },
        _react2.default.createElement('img', {
          style: { borderRadius: 3,
            display: 'inline-block',
            marginRight: 10,
            position: 'relative',
            top: -2,
            verticalAlign: 'middle',
            width: '15px',
            height: '15px'
          },
          src: this.props.option.icon, role: 'presentation'
        }),
        this.props.children
      );
    }
  }]);

  return GravatarOption;
}(_react2.default.Component);

exports.default = GravatarOption;

GravatarOption.propTypes = propTypes;
GravatarOption.defaultProps = defaultProps;