'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _reactFa = require('react-fa');

var _reactFa2 = _interopRequireDefault(_reactFa);

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

require('./SearchBar.css');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by saad bin saeed on 3/1/17.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


var propTypes = {
  onChange: _react.PropTypes.func,
  onSubmit: _react.PropTypes.func
};

var defaultProps = {
  onChange: function onChange(value) {
    return console.log('Default onchange function have been called : ', value);
  },
  onSubmit: function onSubmit(value) {
    return console.log('Default onSubmit function have been called : ', value);
  }
};

var SearchBarComponent = function (_React$Component) {
  _inherits(SearchBarComponent, _React$Component);

  function SearchBarComponent() {
    _classCallCheck(this, SearchBarComponent);

    var _this = _possibleConstructorReturn(this, (SearchBarComponent.__proto__ || Object.getPrototypeOf(SearchBarComponent)).call(this));

    _this.state = {
      value: ''
    };
    _this.handleChange = _this.handleChange.bind(_this);
    _this.handleSubmit = _this.handleSubmit.bind(_this);
    return _this;
  }

  _createClass(SearchBarComponent, [{
    key: 'handleChange',
    value: function handleChange(event) {
      var onChange = this.props.onChange;

      onChange(event.target.value);
      this.setState({
        value: event.target.value
      });
    }
  }, {
    key: 'handleSubmit',
    value: function handleSubmit(event) {
      event.preventDefault();
      var onSubmit = this.props.onSubmit;

      onSubmit(this.state.value);
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        'div',
        { id: 'custom-search-input' },
        _react2.default.createElement(
          'form',
          { onSubmit: this.handleSubmit },
          _react2.default.createElement(
            'div',
            { className: 'input-group' },
            _react2.default.createElement('input', {
              type: 'text', className: 'form-control input-lg', placeholder: 'Search here...',
              onChange: this.handleChange
            }),
            _react2.default.createElement(
              'span',
              { className: 'input-group-btn' },
              _react2.default.createElement(
                'button',
                { type: 'submit', className: 'btn btn-info btn-lg' },
                _react2.default.createElement(_reactFa2.default, { className: 'search-icon', name: 'search' })
              )
            )
          )
        )
      );
    }
  }]);

  return SearchBarComponent;
}(_react2.default.Component);

SearchBarComponent.propTypes = propTypes;
SearchBarComponent.defaultProps = defaultProps;

exports.default = SearchBarComponent;