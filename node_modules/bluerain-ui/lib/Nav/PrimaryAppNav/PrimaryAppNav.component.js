'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactFa = require('react-fa');

var _reactFa2 = _interopRequireDefault(_reactFa);

require('bluerain-bootstrap-theme/dist/css/layouts/system-layout.css');

var _reactstrap = require('reactstrap');

var _reactRouter = require('react-router');

var _MainMenuButton = require('./MainMenuButton.component');

var _MainMenuButton2 = _interopRequireDefault(_MainMenuButton);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Muhammad Atif
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */


// Why???


var propTypes = {
  title: _react.PropTypes.string,
  openMenuAction: _react.PropTypes.func,
  previous: _react.PropTypes.shape({
    title: _react.PropTypes.string.isRequired,
    url: _react.PropTypes.string.isRequired
  }),
  icon: _react.PropTypes.string,
  toggleMenu: _react.PropTypes.func
};

var defaultProps = {
  title: null,
  previous: null
};

var PrimaryAppNav = function (_React$Component) {
  _inherits(PrimaryAppNav, _React$Component);

  function PrimaryAppNav() {
    _classCallCheck(this, PrimaryAppNav);

    return _possibleConstructorReturn(this, (PrimaryAppNav.__proto__ || Object.getPrototypeOf(PrimaryAppNav)).apply(this, arguments));
  }

  _createClass(PrimaryAppNav, [{
    key: 'showPrevious',
    value: function showPrevious() {
      if (this.props.previous) {
        return _react2.default.createElement(
          'span',
          null,
          _react2.default.createElement(
            'span',
            { className: 'prev-page' },
            _react2.default.createElement(
              _reactRouter.Link,
              { to: this.props.previous.url },
              this.props.previous.title
            )
          ),
          _react2.default.createElement(
            'span',
            { className: 'prev-page-sperator' },
            '/'
          )
        );
      }
    }
  }, {
    key: 'showPageIcon',
    value: function showPageIcon() {
      if (this.props.icon) {
        return _react2.default.createElement(
          'span',
          { className: 'page-icon' },
          _react2.default.createElement('img', { src: this.props.icon, width: '30', height: '30', className: 'rounded', alt: 'Page Icon' })
        );
      }
    }
  }, {
    key: 'showNavIcon',
    value: function showNavIcon() {
      if (this.props.previous) {
        var style = {
          marginRight: 15
        };
        return _react2.default.createElement(
          _reactRouter.Link,
          { to: this.props.previous.url, className: 'btn btn-secondary', style: style },
          _react2.default.createElement(_reactFa2.default, { name: 'arrow-left' })
        );
      }
      return _react2.default.createElement(_MainMenuButton2.default, { onClick: this.props.toggleMenu });
    }
  }, {
    key: 'render',
    value: function render() {
      return _react2.default.createElement(
        _reactstrap.Nav,
        { tag: 'nav', className: 'app-navbar navbar-light' },
        _react2.default.createElement(
          'div',
          { className: 'navbar primary-nav' },
          _react2.default.createElement(
            'div',
            { className: 'hidden-sm-up' },
            this.showNavIcon()
          ),
          _react2.default.createElement(
            _reactstrap.NavbarBrand,
            { className: 'text-truncate text-xs-left text-sm-left', tag: 'div' },
            _react2.default.createElement(
              'span',
              { className: 'hidden-xs-down' },
              this.showPageIcon(),
              this.showPrevious()
            ),
            _react2.default.createElement(
              'span',
              { className: 'page-title' },
              this.props.title
            )
          ),
          _react2.default.createElement(
            'div',
            { className: 'navbar-actions' },
            this.props.children
          )
        )
      );
    }
  }]);

  return PrimaryAppNav;
}(_react2.default.Component);

exports.default = PrimaryAppNav;


PrimaryAppNav.propTypes = propTypes;
PrimaryAppNav.defaultProps = defaultProps;