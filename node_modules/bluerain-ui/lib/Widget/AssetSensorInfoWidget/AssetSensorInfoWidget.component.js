'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _reactFa = require('react-fa');

var _reactFa2 = _interopRequireDefault(_reactFa);

var _widget = require('../widget');

var _widget2 = _interopRequireDefault(_widget);

var _widgetHeader = require('../widgetHeader');

var _widgetHeader2 = _interopRequireDefault(_widgetHeader);

var _widgetTitle = require('../widgetTitle');

var _widgetTitle2 = _interopRequireDefault(_widgetTitle);

var _widgetContent = require('../widgetContent');

var _widgetContent2 = _interopRequireDefault(_widgetContent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /**
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                * Created by anser on 12/23/16.
                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */

var propTypes = {
  myData: _react.PropTypes.array,
  widgetTitle: _react.PropTypes.string
};

var defaultProps = {
  myData: [],
  widgetTitle: 'Title'
};

var AssetSensorInfoWidget = function (_React$Component) {
  _inherits(AssetSensorInfoWidget, _React$Component);

  function AssetSensorInfoWidget() {
    _classCallCheck(this, AssetSensorInfoWidget);

    return _possibleConstructorReturn(this, (AssetSensorInfoWidget.__proto__ || Object.getPrototypeOf(AssetSensorInfoWidget)).apply(this, arguments));
  }

  _createClass(AssetSensorInfoWidget, [{
    key: 'render',
    value: function render() {
      if (!this.props) {
        return _react2.default.createElement('div', null);
      }

      var _props = this.props,
          myData = _props.myData,
          widgetTitle = _props.widgetTitle;


      return _react2.default.createElement(
        _widget2.default,
        null,
        _react2.default.createElement(
          _widgetHeader2.default,
          null,
          _react2.default.createElement(
            _widgetTitle2.default,
            null,
            widgetTitle
          )
        ),
        _react2.default.createElement(
          _widgetContent2.default,
          null,
          myData.map(function (item, i) {
            return _react2.default.createElement(
              'ul',
              { key: i, className: 'list-group data-list' },
              AssetSensorInfoWidget.renderConnectionStatus(item.connected),
              AssetSensorInfoWidget.renderAmbientTemperature(item.ambientTemperature),
              AssetSensorInfoWidget.renderCurrent(item.current),
              AssetSensorInfoWidget.renderPower(item.power),
              AssetSensorInfoWidget.renderVoltage(item.voltage)
            );
          })
        )
      );
    }
  }], [{
    key: 'renderConnectionStatus',
    value: function renderConnectionStatus(connected) {
      var status = null;

      if (connected === undefined || connected === null) {
        return _react2.default.createElement('div', null);
      } else if (connected) {
        status = _react2.default.createElement(
          'span',
          null,
          'Online ',
          _react2.default.createElement(_reactFa2.default, { name: 'circle text-success' })
        );
      } else {
        status = _react2.default.createElement(
          'span',
          null,
          'Offline ',
          _react2.default.createElement(_reactFa2.default, { name: 'circle text-danger' })
        );
      }
      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'Status'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          status
        )
      );
    }
  }, {
    key: 'renderAmbientTemperature',
    value: function renderAmbientTemperature(ambientTemperature) {
      if (ambientTemperature === undefined || ambientTemperature === null) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'Room Temperature'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          ambientTemperature,
          ' \u2103'
        )
      );
    }
  }, {
    key: 'renderCurrent',
    value: function renderCurrent(current) {
      if (current === undefined || current === null) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'Current'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          current,
          ' A'
        )
      );
    }
  }, {
    key: 'renderPower',
    value: function renderPower(power) {
      if (power === undefined || power === null) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'Power'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          power,
          ' W'
        )
      );
    }
  }, {
    key: 'renderVoltage',
    value: function renderVoltage(voltage) {
      if (voltage === undefined || voltage === null) {
        return _react2.default.createElement('div', null);
      }

      return _react2.default.createElement(
        'li',
        { className: 'list-group-item' },
        _react2.default.createElement(
          'div',
          { className: 'data-label' },
          'Voltage'
        ),
        _react2.default.createElement(
          'div',
          { className: 'data-value' },
          voltage,
          ' V'
        )
      );
    }
  }]);

  return AssetSensorInfoWidget;
}(_react2.default.Component);

exports.default = AssetSensorInfoWidget;


AssetSensorInfoWidget.propTypes = propTypes;
AssetSensorInfoWidget.defaultProps = defaultProps;