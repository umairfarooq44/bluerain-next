'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _widget = require('../widget');

var _widget2 = _interopRequireDefault(_widget);

var _widgetHeader = require('../widgetHeader');

var _widgetHeader2 = _interopRequireDefault(_widgetHeader);

var _widgetTitle = require('../widgetTitle');

var _widgetTitle2 = _interopRequireDefault(_widgetTitle);

var _widgetContent = require('../widgetContent');

var _widgetContent2 = _interopRequireDefault(_widgetContent);

var _ComponentState = require('../../ComponentState/ComponentState');

var _ComponentState2 = _interopRequireDefault(_ComponentState);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var propTypes = {
  data: _react.PropTypes.object,
  contentComponent: _react.PropTypes.func.isRequired,
  contentComponentDataProp: _react.PropTypes.string.isRequired,
  title: _react.PropTypes.string
};

var defaultProps = {
  contentComponentDataProp: 'viewer'
};

var StatefulWidgetComponent = function (_React$Component) {
  _inherits(StatefulWidgetComponent, _React$Component);

  function StatefulWidgetComponent(props) {
    _classCallCheck(this, StatefulWidgetComponent);

    var _this = _possibleConstructorReturn(this, (StatefulWidgetComponent.__proto__ || Object.getPrototypeOf(StatefulWidgetComponent)).call(this, props));

    _this.state = {
      hasData: false,
      loading: false,
      error: null
    };

    _this.onChildUpdate = _this.onChildUpdate.bind(_this);
    return _this;
  }

  _createClass(StatefulWidgetComponent, [{
    key: 'onChildUpdate',
    value: function onChildUpdate(props, state) {

      var newState = {};

      if (props.data.error !== undefined) {
        newState.error = props.data.error;
      }

      if (props.data.loading !== undefined) {
        newState.loading = props.data.loading;
      }

      var dataProp = this.props.contentComponentDataProp;
      console.log("checking data", props.data[dataProp]);
      if (props.data[dataProp] !== null && props.data[dataProp] !== undefined) {
        newState.hasData = true;
      } else {
        newState.hasData = false;
      }

      if (!this.hasDataChanged(newState)) {
        return;
      }

      this.setState(newState);
    }
  }, {
    key: 'hasDataChanged',
    value: function hasDataChanged(props) {

      if (props.error !== this.state.error) {
        return true;
      }

      if (props.loading !== this.state.loading) {
        return true;
      }

      if (props.hasData !== this.state.hasData) {
        return true;
      }

      return false;
    }
  }, {
    key: 'renderContent',
    value: function renderContent() {
      var _state = this.state,
          hasData = _state.hasData,
          loading = _state.loading,
          error = _state.error;
      var ContentComponent = this.props.contentComponent;


      console.log('got here loading', loading);
      console.log('got here hasData', hasData);

      var componentStateProps = {};
      componentStateProps.style = {};

      var contentComponentStyle = {};

      if (error) {
        componentStateProps.card = false;
        componentStateProps.title = 'Error';
        componentStateProps.description = 'An error occured!';
        componentStateProps.style.display = 'initial';
        contentComponentStyle.display = 'none';
      }

      if (loading && !hasData) {
        componentStateProps.card = false;
        componentStateProps.title = 'Loading';
        componentStateProps.description = 'Please hold, our robots are working!';
        componentStateProps.style.display = 'initial';
        contentComponentStyle.display = 'none';
      }

      if (hasData) {
        componentStateProps.style.display = 'none';
        contentComponentStyle.display = 'initial';
      }

      console.log('componentStateProps', componentStateProps);
      console.log('contentComponentStyle', contentComponentStyle);
      return _react2.default.createElement(
        _widgetContent2.default,
        null,
        _react2.default.createElement(_ComponentState2.default, componentStateProps),
        _react2.default.createElement(ContentComponent, {
          onComponentUpdate: this.onChildUpdate,
          style: contentComponentStyle
        })
      );
    }
  }, {
    key: 'render',
    value: function render() {
      var title = this.props.title;


      return _react2.default.createElement(
        _widget2.default,
        null,
        _react2.default.createElement(
          _widgetHeader2.default,
          null,
          _react2.default.createElement(
            _widgetTitle2.default,
            null,
            title
          )
        ),
        this.renderContent()
      );
    }
  }]);

  return StatefulWidgetComponent;
}(_react2.default.Component);

StatefulWidgetComponent.propTypes = propTypes;
StatefulWidgetComponent.defaultProps = defaultProps;

exports.default = StatefulWidgetComponent;