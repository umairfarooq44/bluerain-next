/**
 * Created by anser on 5/22/17.
 */

import React, { PropTypes } from 'react';
import { VictoryBar, VictoryGroup, VictoryVoronoiTooltip } from 'victory';
import moment from 'moment';

const propTypes = {
  data: PropTypes.array,
  x: PropTypes.string,
  y: PropTypes.func,
  tooltip: PropTypes.bool,
  tooltipIsBoolean: PropTypes.bool,
  tooltipBooleanTrueLabel: PropTypes.string,
  tooltipBooleanFalseLabel: PropTypes.string,
  dateFormat: PropTypes.string,
  fillColor: PropTypes.string,
  strokeColor: PropTypes.string,
  unit: PropTypes.string
};

const defaultProps = {
  data: [],
  x: '',
  y: () => {},
  tooltip: undefined,
  tooltipIsBoolean: false,
  tooltipBooleanTrueLabel: 'Boolean On',
  tooltipBooleanFalseLabel: 'Boolean False',
  fillColor: 'rgba(255,255,255,0.3)',
  strokeColor: 'white',
  unit: '',
  dateFormat: 'hh:mm:ss a'
};

export default class BarChart extends React.Component {

  static renderTooltip(tooltip, dateFormat, unit, tooltipIsBoolean, tooltipBooleanTrueLabel, tooltipBooleanFalseLabel) {
    if (tooltip) {
      if (tooltipIsBoolean) {
        return (
          <VictoryVoronoiTooltip labels={d => ` ${d.y === true ? tooltipBooleanTrueLabel : tooltipBooleanFalseLabel} at ${moment(d.x).format(dateFormat)}`} />
        );
      }
      return (
        <VictoryVoronoiTooltip labels={d => ` ${Math.round(d.y * 100) / 100}${unit} at ${moment(d.x).format(dateFormat)}`} />
      );

    }
  }
  render() {
    const {
      data,
      x,
      y,
      fillColor,
      strokeColor,
      tooltip,
      dateFormat,
      unit,
      tooltipIsBoolean,
      tooltipBooleanTrueLabel,
      tooltipBooleanFalseLabel
    } = this.props;

    return (
      <VictoryGroup
        data={data}
        x={x}
        y={y}
        scale={{ x: 'time', y: 'linear' }}
        padding={{ top: 4, right: 10, left: 10 }} height={125} zIndex={20}
        style={{ parent: { overflow: 'visible' } }}
      >
        <VictoryBar
          style={{
            data: {
              fill: fillColor,
              stroke: strokeColor,
              strokeWidth: 1
            }
          }}
        />
        {BarChart.renderTooltip(tooltip, dateFormat, unit, tooltipIsBoolean,
                   tooltipBooleanTrueLabel, tooltipBooleanFalseLabel)}
      </VictoryGroup>
    );
  }
}

BarChart.propTypes = propTypes;
BarChart.defaultProps = defaultProps;
